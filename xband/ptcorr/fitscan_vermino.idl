;MAKE A NICE-SIZED PLOTTING WINDOW...
window,2,xs=300,ys=225

retall

;DEFINE DIRNAME AS THE DIRECTORY IN WHICH THE INPUT FILES EXIST. 
dirname= '/home/heiles/dzd2/courses/ay121/data/tstdata/'

;DEFINE THE OUTPUT FILENAME...
outputfile= '~heiles/dzd2/courses/ay121/data/tstdata/an_vermino.output'

;SPECIFY THE SET OF INPUT FILES.  NORMALLY THERE IS A LARGE NUMBER--ONE
;FILE PER SCAN. 
file= $
['Sat_Mar_15_12:06:42_2003_scan.sav', $
'Sat_Mar_15_12:13:28_2003_scan.sav', $
'Sat_Mar_15_12:19:42_2003_scan.sav', $
'Sat_Mar_15_12:33:56_2003_scan.sav']

nrfiles= n_elements( file)
outfile= file

;DEFINE THE OUTPUT FILE NAMES--ONE OUTPUT FILE PER INPUT FILE...
FOR NR= 0, NRFILES-1 DO BEGIN &$
loc= strpos( file[ nr], 'scan') &$
outfile[ nr]= strmid( file[nr],0,loc+4) + 'fit' + strmid( file[nr], loc+4) &$
ENDFOR

;DEFINE THE STRUCTURE CONTAINING THE FIT PARAMETERS; FOLLOW THE SAME
;ORGANIZATIONAL STRUCTURE AS THE ORIGINAL DATA...
fit = replicate ( { $
	sigma:   fltarr( 2), $ ;  sigma of fit
	problem: intarr( 2), $ ;  sigma of fit
	dishaz:  fltarr( 2), $ ;  mean dish az for fitted points
	dishalt: fltarr( 2), $ ;  mean dish alt for fitted points
	zro1:    fltarr( 2), $ ;  off-source sys pwr
	hgt1:    fltarr( 2), $ ;  source deflection
	cen1:    fltarr( 2), $ ;  cntr of Gaussian
	wid1:    fltarr( 2), $ ;  NPBW of Gaussian

	sigzro1:  fltarr( 2), $ ;  sig of off-source sys pwr
	sighgt1:  fltarr( 2), $ ;  sig of source deflection
	sigcen1:  fltarr( 2), $ ;  sig of cntr of Gaussian
	sigwid1:  fltarr( 2) $ ;  sig of NPBW of Gaussian
}, 2)
  
;IF YOU WANT TO CHECK AN INPUT FILE, DO THE FOLLOWING...
;restore, dirname+ file[0], /ver

