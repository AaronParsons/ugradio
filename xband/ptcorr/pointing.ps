%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: pointing.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips pointing.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 2001.08.17:1228
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (pointing.dvi)
@start /Fa 37 122 df<EA0306EA078FA6387FFFC0B512E0A26C13C0380F1E00A6387F
FFC0B512E0A26C13C0381E3C00A6EA0C18131C7E9B18>35 D<1238127CA2127E123E120E
A3121CA2123812F812F012C0070E789B18>39 D<121C123E127E127F123F121F1207120E
121E127C12F81260080C788518>44 D<1230127812FCA2127812300606778518>46
D<1303EB0780A2130F14005B131EA2133E133C137C1378A213F85B12015B12035BA21207
5B120F90C7FCA25A121E123E123CA2127C127812F85AA2126011247D9F18>I<EA01F0EA
07FC487EEA1F1FEA1C0738380380007813C0EA7001A238E000E0A9EAF001007013C0A2EA
780300381380381C0700EA1F1FEA0FFE6C5AEA01F0131C7E9B18>I<EA01801203A21207
120F123F12FF12FB12431203B0EA7FFCEAFFFEEA7FFC0F1C7B9B18>I<EA03F0EA0FFEEA
3FFF387C0F80387003C0EAE00138F000E0A21260C7FCA2EB01C0A21303EB0780EB0F0013
1E5B5B5B485AEA07C0485A381E00E05AEA7FFFB5FC7E131C7E9B18>I<387FFFC0B512E0
A3C8FCA4B512E0A36C13C0130C7E9318>61 D<137013F8A213D8A2EA01DCA3138CEA038E
A41306EA0707A4380FFF80A3EA0E03A2381C01C0A2387F07F038FF8FF8387F07F0151C7F
9B18>65 D<B512F0A3381C0070A41400A2130EA3EA1FFEA3EA1C0EA390C7FCA21438A5B5
12F8A3151C7F9B18>69 D<B512E0A3EA1C00A41400A2131CA3EA1FFCA3EA1C1CA390C7FC
A7EAFFC0A3131C7E9B18>I<EA7FFFB512806C1300EA01C0B3A4EA7FFFB512806C130011
1C7D9B18>73 D<EA7FE012FF127F000EC7FCB11470A5387FFFF0B5FC7E141C7F9B18>76
D<387E07F038FF0FF8387F07F0381D81C0A313C1121CA213E1A313611371A213311339A3
1319A2131D130DA3EA7F07EAFF87EA7F03151C7F9B18>78 D<EA0FF8EA3FFE487EEA780F
EA700700F01380EAE003B0EAF00700701300EA780FEA7FFF6C5AEA0FF8111C7D9B18>I<
EAFFFEEBFF8014C0EA1C03EB01E013001470A514E01301EB03C0EA1FFF1480EBFE00001C
C7FCA8B47EA3141C7F9B18>I<387FFFF8B5FCA238E07038A400001300B2EA07FFA3151C
7F9B18>84 D<38FF07F8A3381C01C0EA1E03000E1380EA0F0700071300A2EA038EA2EA01
DCA213FC6C5AA21370A9EA01FC487E6C5A151C7F9B18>89 D<383FFFE05AA2387001C013
03EB07801400C65A131E131C133C5B137013F0485A5B1203485A90C7FC5A001E13E0121C
123C5A1270B5FCA3131C7E9B18>I<EA1FE0EA3FF8487EEA781EEA300EC67EA213FF1207
121FEA7F07127812E0A36C5AEA781F383FFFF0EA1FFBEA07E114147D9318>97
D<127E12FE127E120EA5133EEBFF80000F13C0EBC1E01380EB0070120E1438A6000F1370
A2EB80E013C1EBFFC0000E138038063E00151C809B18>I<EA01FEEA07FF001F1380EA3E
073838030048C7FCA25AA61270EB01C01238EA3E03381FFF8000071300EA01FC12147D93
18>I<EB1F80133F131F1303A5EA03E3EA0FFBEA1FFFEA3C1FEA380FEA7007130312E0A6
EA7007A2EA380FEA3C1F381FFFF0380FFBF83803E3F0151C7E9B18>I<EA01F0EA07FCEA
1FFEEA3E0F38380780EA7003A238E001C0A2B5FCA300E0C7FC1270EB01C01238EA3E0338
1FFF8000071300EA01FC12147D9318>I<127E12FE127E120EA5133EEBFF80000F13C013
C1EB80E01300120EAB387FC3FC38FFE7FE387FC3FC171C809B18>104
D<EA0380487EA36C5AC8FCA4EA7FC012FF127F1201AEB5FC14801400111D7C9C18>I<EA
7FE012FF127F1200B3A4387FFFC0B512E06C13C0131C7E9B18>108
D<387CE0E038FFFBF8EA7FFF381F1F1CEA1E1EA2EA1C1CAB387F1F1F39FFBFBF80397F1F
1F001914819318>I<EA7E3E38FEFF80007F13C0EA0FC1EB80E01300120EAB387FC3FC38
FFE7FE387FC3FC1714809318>I<EA01F0EA0FFE487E383E0F80EA3803387001C0A238E0
00E0A5EAF001007013C0EA7803383C0780EA3E0F381FFF006C5AEA01F013147E9318>I<
EA7E3E38FEFF80007F13C0380FC1E01380EB0070120E1438A6000F1370A2EB80E013C1EB
FFC0000E1380EB3E0090C7FCA7EA7FC0487E6C5A151E809318>I<387F87E038FF9FF038
7FBFF83803F878EBF030EBE0005BA25BA9EA7FFEB5FC6C5A15147F9318>114
D<EA07F7EA3FFF5AEA780FEAE007A3007CC7FCEA7FE0EA1FFCEA03FEEA001F38600780EA
E003A212F038F80F00B5FC13FCEAE7F011147D9318>I<487E1203A4387FFFC0B5FCA238
038000A9144014E0A33801C1C013FF6C1380EB3E0013197F9818>I<387F8FF000FF13F8
007F13F0381E03C0000E1380A338070700A3EA038EA313DEEA01DCA3EA00F8A213701514
7F9318>118 D<387F8FF000FF13F8007F13F0380E01C0EB0380A21207EB0700A2EA0387
1386138EEA01CEA2EA00CCA213DC1378A31370A313F05B1279EA7BC0EA7F806CC7FC121E
151E7F9318>121 D E /Fb 2 16 df<B612C0A21A027C8B23>0 D<EA07E0EA1FF8EA3FFC
EA7FFEA2B5FCA8EA7FFEA2EA3FFCEA1FF8EA07E010127D9317>15
D E /Fc 10 123 df<EA07CCEA0C3C1218EA301CEA703812E0A3EAC0701372A2EAE0F2EA
6174EA3E3C0F0E7F8D13>97 D<EA03E0EA0E10EA18381230EA70005AA35AA21308EA6010
EA3060EA1F800D0E7F8D0F>99 D<EA03E0EA0C10EA38081270EA6010EAFFE0EAE000A413
08EA6010EA3060EA1F800D0E7F8D10>101 D<123F120EA4121CA41238A41270A412E012
E4A312E8127808177F960B>108 D<EA03E0EA0E18EA180CEA300E127012E0A3EAC01CA2
1338EA6070EA30C0EA1F000F0E7F8D11>111 D<EA38F0EA4D18EA4E381330EA9C00121C
A35AA45A12300D0E7F8D10>114 D<EA07C0EA0C20EA1870A2EA3800EA3F80EA1FC0EA0F
E01200EA606012E0EAC0C0EAC180EA3F000C0E7E8D10>I<12061207120EA4EAFFC0EA1C
00A35AA45A1380A2EA71001272123C0A147F930D>I<EA1C03EA2E07124EA2EA8E0E121C
A3485A1480A2EA183C381C5D00EA078F110E7F8D14>I<EA0784EA0FCCEA1FF8EA1010EA
00201340EA0180EA02005AEA0808EA1018EA3FF0EA43E0EA81C00E0E7F8D10>122
D E /Fd 37 123 df<13FCEA0182EA0707EA060F120E130690C7FCA4B5FCEA0E07AE387F
0FE0131A809915>12 D<126012F012F812681208A31210A2122012C0050B7D990B>39
D<126012F0A212701210A31220A212401280040B7D830B>44 D<126012F0A2126004047D
830B>46 D<1330A2137013F0A2EA0170120312021204120C1208121012301220124012C0
B5FCEA0070A6EA07FF10187F9713>52 D<126012F0A212601200A8126012F0A212600410
7D8F0B>58 D<EA1FC0EA20E0EA4070EAE07812F0A21260EA00F013E0EA018013005A1202
A6C7FCA41206120FA212060D1A7E9912>63 D<137F380180C03806003000081308487F38
203E0213E13841C081384380710083EB7080EA8700A6EA838012433941C0F1003820E131
EB3E1E6CC8FC7E0006EB03803901803E0038007FE0191A7E991E>I<130CA3131EA2133F
132FA2EB4F801347A2EB83C0A3380101E0A348B47EEA020000067F00041378A2487FA200
1C133E39FF01FFC01A1A7F991D>I<EB3F023801C0C63803002E000E131E48130E14065A
007813021270A200F090C7FCA5903803FFC03970001E00A2127812387EA27E0003132E38
01C0C638003F021A1A7E991E>71 D<EA0FC2EA1836EA300EEA6006A2EAE002A3EAF0007E
EA7F80EA3FF0EA1FF8EA0FFCEA01FEEA001E130F13071280A3EAC006A2EAE00CEAD818EA
87E0101A7E9915>83 D<39FFF07FC0390F000E001404B26C5B138000035B6C6C5A3800E0
C0011FC7FC1A1A7F991D>85 D<EA1FC0EA7060EA78707F12301200EA03F8EA1E38123812
7812F01480A21378EA78FD381F1E0011107F8F13>97 D<12FC121CA913F8EA1F0EEA1E07
001C1380130314C0A61480EB0700121EEA1B0CEA10F0121A7F9915>I<EA07F0EA0C1CEA
383CA2EA7018EAF000A61270EA38041308EA0C18EA07E00E107F8F11>I<137E130EA9EA
03CEEA0C3EEA380EA2127012F0A612701278EA381EEA1C2E3807CFC0121A7F9915>I<EA
07C0EA1C70EA38381270131C12F0EAFFFCEAF000A41270EA38041308EA0C18EA07E00E10
7F8F11>I<13F0EA0398EA073C120E13181300A5EAFFC0EA0E00AEEA7FE00E1A80990C>I<
EA0FCEEA1CF3EA3872EA7878A4EA3870EA1CE0EA2FC0EA2000A21230EA3FF0EA1FFC13FE
EA600FEAC003A4EA6006EA381CEA07E010187F8F13>I<12FC121CA913F8EA1D0CEA1E0E
A2121CAB38FF9FC0121A7F9915>I<1218123CA21218C7FCA612FC121CAEEAFF80091A80
990A>I<13C0EA01E0A2EA00C01300A6EA07E01200B1126012F0EAF1C0EA6180EA3E000B
2183990C>I<12FC121CA9EB3F80EB1E00131813105B5BEA1DC0EA1FE0121C1370137813
387F131E131F38FF3FC0121A7F9914>I<12FC121CB3A6EAFF80091A80990A>I<38FC7C1F
391D8E6380391E0781C0A2001C1301AB39FF9FE7F81D107F8F20>I<EAFCF8EA1D0CEA1E
0EA2121CAB38FF9FC012107F8F15>I<EA07E0EA1C38EA381CEA700EA2EAF00FA6EA700E
A2EA381CEA1C38EA07E010107F8F13>I<EAFCF8EA1F0EEA1E07001C1380A2EB03C0A6EB
07801400EA1E0FEA1F1CEA1CF090C7FCA6B47E12177F8F15>I<EAFDC0EA1E7013F0121C
13601300AAEAFFC00C107F8F0F>114 D<EA1F20EA60E0EA402012C0A2EAF000127FEA3F
C0EA1FE0EA00F0EA8070133012C01320EAF040EA8F800C107F8F0F>I<1204A3120CA212
1C123CEAFFC0EA1C00A81320A5EA0E40EA03800B177F960F>I<EAFC7EEA1C0EAC131EEA
0C2E3807CFC012107F8F15>I<38FF1F80383C0600EA1C04A2EA1E0CEA0E08A26C5AA213
90EA03A0A2EA01C0A36C5A11107F8F14>I<39FF3F9F80393C0E070000381306381C1604
1317001E130C380E23081488000F13983807419014D03803C1E01380A200015BEB004019
107F8F1C>I<38FF3F80383C1C00EA1C18EA0E106C5A13606C5A12017F1203EA0270487E
1208EA181CEA381E38FC3FC012107F8F14>I<38FF1F80383C0600EA1C04A2EA1E0CEA0E
08A26C5AA21390EA03A0A2EA01C0A36C5AA248C7FC126112F112F25A127811177F8F14>
I<EA7FF8EA6070124013E0EA41C0A2EA0380EA0700A2EA0E08121CA2EA381012701330EA
FFF00D107F8F11>I E /Fe 4 53 df<1208127812981218ACEAFF8009107E8F0F>49
D<123FEA6180EAF0C013E0EA6060120013E013C0EA0180EA030012065AEA10201220EA7F
C012FF0B107F8F0F>I<121FEA2180EA71C0A21231EA0180A2EA0F00EA0180EA00C0EA60
E012F0A213C0EA6180EA1F000B107F8F0F>I<1203A25A5A120B121312331223124312C3
EAFFE0EA0300A4EA1FE00B107F8F0F>I E /Ff 1 49 df<1206120FA2120E121EA2121C
123C1238A212301270A2126012E012C0124008117F910A>48 D E
/Fg 9 91 df<1303A213071306A2130E130CA2131C1318A213381330A213701360A213E0
13C0A212011380A312031300A25A1206A2120E120CA2121C1218A212381230A212701260
A212E05AA2102D7DA117>61 D<1406A2140EA2141E143EA2145F144F148FEB010FA21302
A213041308A20110138014071320EB7FFFA2EB8007A2EA0100120215C0481303001E1307
39FF807FFCA21E1F7E9E22>65 D<90B512E015F890380F007C151E81131EED0780A35BA4
49130FA449EB1F00A2151E153E4848133CA25D5D4848485A4A5A4A5A023FC7FC387FFFFC
B512F0211F7E9E26>68 D<90B6FC15FE90380F001E1506A2011E1302A31504EB3C04A215
00140C495AEB7FF8A2EB7818EBF010A44848C7FCA4485AA4EA7FFE12FF201F7E9E1D>70
D<EBFFFC4813F838000F00A3131EA45BA45BA45BA4485AA4485AA4EAFFFCA2161F7F9E14
>73 D<EBFFFCA2010FC7FCA3131EA45BA45BA45BA21540A248481380A2EC0100A248485A
1406140E143E387FFFFCB5FC1A1F7E9E1F>76 D<903807E08090381FF300EB781FEBE00F
497E0001130638038002A3000790C7FCA26C7E13F8EBFF806C7F6C7FEB3FF01303130014
78A214701220A21460006013E0495A38700380D87C07C7FCEAC7FEEA81F8191F7D9E1C>
83 D<000FB512FC4814F8391C03C038001814180030140838200780A21240151038800F
00A200001400A2131EA45BA45BA45BA31201387FFFC0A21E1F7F9E1B>I<90387FFFF890
B512F09038F801E0EBE003D8018013C0EC07809038000F000002131E5C48137C1478C75A
495A495A495A49C7FC5B131E4913805B9038F00100EA01E01203EBC002EA0780380F0006
001E5B48131C4813FCB55AA21D1F7D9E1F>90 D E /Fh 32 123
df<91387F03E09138C38E70903901879CF0130390390703386002001300A3130E5DA390
B6128048150039001C00E0A45B4A5AA413704A5AA413F04948C7FCA43801C006140EA238
31860C387B8F1C38F31E1838620C70383C07C02429829F1C>11 D<EC3FCEECE0EE903801
81FC1303EC00DC49131C1538A2130EA21570A290B512F05A39001C00E0A4EC01C01338A3
EC0380A21370158CEC0718A301E013301403EC01E091C7FC485AA3EA3180127B00F3C8FC
1262123C1F29829F1B>13 D<13021306130E131C133C13FCEA07DCEA06381200A31370A4
13E0A4EA01C0A4EA0380A4EAFFF8A20F1D7B9C17>49 D<EB1F80EB70C0EBC06038018070
380310780002133838060878EA0C10A31320EB40F0380780E0380001C0EB0380EB070013
1E133813E0485A0007C7FC000E133048137000181360383E01E03873FFC00060138038C0
7F00133C151D7D9C17>I<1406140EA2141FA25CA2146F14CFA2EB018FA2EB030FA21306
130CA213181580EB3007EB3FFF5BEBE00713C0EA0180A2EA0300A2120F397FE07FF8EAFF
C01D1F7E9E22>65 D<48B512C015F039001E00F81578157C5BA44913F8A2EC01F0EC03E0
9038F007809038FFFE009038F00F80EC03C0D801E013E0A21401A23803C003A3EC07C0EA
0780EC0F80EC1F00147EB512F814E01E1F7D9E20>I<48B5128015E039001E01F0EC0078
153C5B151EA35BA449133EA44848137CA31578484813F0A2EC01E0EC03C038078007EC0F
80EC1E00147CB512F014C01F1F7D9E22>68 D<903801FC0C903807FF1890381F03B89038
7C00F813F048481370485A485A120F90C712605A003E1400A25AA45AECFFF0A2EC078000
78EB0F00A3127C003C131E7E001F133E380FC0EE3803FFCC3800FE041E1F7A9E23>71
D<3A01FFF3FFE0A23A001E003C00A3495BA4495BA449485A90B5FCA2EBF0014848485AA4
4848485AA4484848C7FCA439FFF9FFF001F15B231F7D9E22>I<48B4ECFFC0A2D8001F90
3801F800A2ED037801375C1506150CA20167EB19E0EB63801531A201C3495A15C3A2EC81
83D80183EB8780EC8307A214862703038C0FC7FCA21498EB01D80006EBF01EA214E0000E
13C03AFFE1C3FFE0D9C1835B2A1F7D9E29>77 D<EB01FCEB0F0790381C03C090387001E0
EBE000484813F0000314704848137848C7FC5A121E123EA2003C14F8127CA348EB01F0A2
15E0140315C0007813071580EC0F006C131E5C6C5B000E13E038078380D800FEC7FC1D1F
7A9E23>79 D<48B5FC15C039001E03E0EC01F014004913F8A490387801F0A215E0EC03C0
9038F00780EC1E00EBFFF0EBF0303801E03880A33803C03CA43807807C1518A2EC3E3039
FFF81E209038F00FC01D1F7D9E21>82 D<000FB512F04814E0381E078100181380003814
6038300F00A2126015C0EAC01EA200001400A25BA45BA45BA4485AA31203B5FCA21C1F78
9E21>84 D<397FFC3FF8A23907800780EC0300A2380F0006A4001E5BA4485BA4485BA448
5BA35C3870018049C7FC6C5AEA3C1CEA1FF8EA07E01D1F779E22>I<EBF18038038DC038
070780120E121CEA3C03383807001278A3EAF00EA31430EB1C60A2EA703CEB7CC0EA30CC
380F078014147C9317>97 D<EA0780123F13001207A3120EA45AA213F0EA1F0CEA3E0E12
3CEA380FA21270A4EAE01EA3131C133C1338EA607013E0EA31C0EA1F0010207B9F15>I<
137EEA01C338030180EA0E07121E001C1300EA3C0248C7FCA35AA5EA70021307EA300EEA
1838EA07E011147C9315>I<1478EB03F814F0EB0070A314E0A4EB01C0A213F1EA038D38
070780120E121CEA3C03383807001278A3EAF00EA31430EB1C60A2EA703CEB7CC0EA30CC
380F078015207C9F17>I<137CEA01C338070180120E121C123C38380300EA780EEA7BF8
007EC7FC12F0A4127013021307EA380EEA1838EA07E011147C9315>I<EA01E0120F5B12
01A3485AA448C7FCA2133E1363380E8180380F01C0A2120E381E0380121CA338380700A3
EB0E1800701330130CEB1C20EB0C6000E013C03860078015207D9F17>104
D<136013F0A213E01300A7120FEA19801231EA21C0EA6180126312C3EA0700A3120EA3EA
1C3013601218EA3840EA18C0EA1980EA0F000C1F7D9E0E>I<EA01E0120F5B1201A3485A
A448C7FCA2EB03C0EB0460380E08E013111321EB40C0381C8000001DC7FC121EEA1FC0EA
38E01370A2EB3860387070C0A3EB318000E01300EA601E13207D9F15>107
D<EA03C0121F13801203A3EA0700A4120EA45AA45AA45AA3EA7180EAE300A312E6126612
3C0A207C9F0C>I<391E07C0F8393318618C9038A032063963E03407EBC03CEB803800C7
EB780E38070070A3000E495AA3ED3860261C01C013C01530ED708015313A3803803300D8
1801131E23147D9325>I<381E07C038331860EBA030EA63E0EBC038138000C71370EA07
00A3000E13E0A3EB01C3001C13C61486EB0384EB018C00381398381800F018147D931A>
I<137CEA01C338030180000E13C0121E001C13E0123C1278A338F003C0A3EB07801400EA
700F130EEA3018EA1870EA07C013147C9317>I<3803C1E038066618EB7C1CEA0C78EB70
1EA2EA18E01200A33801C03CA3143838038078EBC07014E0EBC1C038076380EB1E0090C7
FCA2120EA45AEAFFC0A2171D809317>I<13FCEA0306EA0603EA0C0FA2130E1300EA0F80
13F0EA07F8EA03FCEA003E130E1270EAF00CA2EAE008EA6010EA3060EA1F8010147D9313
>115 D<EA018013C0EA0380A4EA0700A2EAFFF0A2EA0E00A45AA45AA31330EA7060A213
C01380EA3100121E0C1C7C9B0F>I<000F136038198070003113E0EA21C0EA6180126338
C381C0EA0701A3380E0380A3148CEB0718120CA2380E0F30EA06133803E1E016147D9318
>I<000FEB60E0381980710031EBE1F03821C0E0D861801370126339C381C060EA0701A3
390E0380C0A3EC8180A29038070100148338060F82380719843801F0F81C147D931E>
119 D<EBE0603803F0C0EA07F8380E0F80380C0300EA00065B5B5B5B5B485A48C7FC0006
13C0380C01801218383F0700EA71FEEA60FCEAC07813147E9313>122
D E /Fi 63 122 df<90380FF07F90397FF9FF809039F83FC7C03901E07F8F0003140FEA
07C091383F07806EC7FCA5B612F8A22607C01FC7FCB0393FF8FFF0A22220809F1F>11
D<EB0FE0EB7FF8EBF81C3801E07C1203EA07C0A2143891C7FCA3EBC1FEB5FCA23807C03E
B0393FF9FFC0A21A20809F1D>I<EC700EA44A5AA449485AA5007FB612F0B712F8A23A00
0700E00090380E01C0A349485AA44948C7FCB712F8A26C15F02600E01CC7FCA548485AA4
48485AA425297D9F2C>35 D<1238127C12FE12FFA2127F123B1203A21206A2120E120C12
181270122008107C860F>44 D<EAFFF0A40C047F8B11>I<1238127C12FEA3127C123807
077C860F>I<146014E0A2EB01C0A2EB0380A3EB0700A3130EA25BA35BA35BA25BA3485A
A2485AA348C7FCA3120EA25AA35AA35AA25AA25A132D7DA11A>I<137013F0120F12FF12
F31203B3A4B51280A2111D7C9C1A>49 D<EA07F0EA1FFEEA383F387C1F8038FE0FC0A214
E01307127C1238EA000F14C0A2EB1F801400133E13785B5B3801C060EA0380EA0700000C
13E0EA1FFF14C05A5AB5FCA2131D7D9C1A>I<EA01FCEA07FF380E0F80001E13C0383F07
E01387A3381F0FC0120E00001380EB1F00EA01FCA238000F80EB07C0EB03E014F0003C13
F8127E12FFA314F0127E387C07E0383C0FC0380FFF803803FC00151D7E9C1A>I<EB01C0
13031307A2130F131F133F1377136713C7EA01871203EA0707120E120C12181238127012
E0B512FEA238000FC0A63801FFFEA2171D7F9C1A>I<38380380EA3FFF14005B5B13F013
800030C7FCA4EA33F8EA3FFEEA3C1F38380F80003013C0120014E0A2127812FC12FEA200
FC13C0127838601F8038383F00EA1FFCEA07F0131D7D9C1A>I<133F3801FFC03807E0E0
EA0F81381F03F0121E123E127CEB01E090C7FCEAFC1013FF00FD13C038FF03E038FE01F0
A200FC13F8A4127CA3003C13F0123E381E03E0380F07C03807FF803801FE00151D7E9C1A
>I<1260387FFFF8A214F014E0A2B512C038E0038038C00700130E130CEA001C5B1378A2
5BA31201A31203A86C5A151E7D9D1A>I<EA01FCEA07FF380F0780381C03C0EB01E0123C
A2123EEA3F81EBE3C0EBF380381FFF007E14C06C13E0121F383C7FF038781FF81307EAF0
0113001478A214701278007C13E0383E03C0380FFF803803FC00151D7E9C1A>I<EA01FC
EA0FFF381F0780383E03C0007C13E0130100FC13F0A314F8A4EA7C03A2EA3E07EA1FFDEA
07F9EA0041EB01F0123C127EEB03E0A2EB07C0003C138038381F00EA1FFCEA07F0151D7E
9C1A>I<1238127C12FEA3127C12381200A61238127C12FEA3127C123807147C930F>I<00
7FB61280B712C0A2CAFCA9B712C0A26C1580220F7D9229>61 D<14E0A2497EA3497EA249
7EA2497E130CA2EB187FA201307F143F01707FEB601FA201C07F140F48B57EA2EB800748
486C7EA20006801401000E803AFFE01FFFE0A2231F7E9E28>65 D<B512FEECFFC03907E0
07E0EC03F0EC01F815FCA515F8140315F0EC0FE090B5128015E09038E003F0EC01F815FC
140015FEA515FC140115F8EC07F0B612E015001F1F7E9E25>I<903807FC0290383FFF0E
9038FE03DE3903F000FE4848133E4848131E485A48C7120EA2481406127EA200FE1400A7
127E1506127F7E150C6C7E6C6C13186C6C13386C6C13703900FE01C090383FFF80903807
FC001F1F7D9E26>I<B512FEECFFC03907F007F0EC01F86E7E157E81A2ED1F80A316C0A9
1680A3ED3F00A2157E5D4A5AEC07F0B612C04AC7FC221F7E9E28>I<B612E0A23807F007
14011400156015701530A21460A21500A2EBF1E013FFA213F1EBF060A2150CA214001518
A31538157815F8EC03F0B6FCA21E1F7E9E22>I<B612E0A23807F0071401140015601570
1530A21460A21500A2EBF1E013FFA213F1EBF060A491C7FCA8B512C0A21C1F7E9E21>I<
903807FC0290383FFF0E9038FE03DE3903F000FE4848133E4848131E485A48C7120EA248
1406127EA200FE91C7FCA591387FFFE0A2007E903800FE00A2127F7EA26C7E6C7E6C7E38
03F0013900FE03BE90383FFF1E903807FC06231F7D9E29>I<B5389FFFF0A23A07F000FE
00AC90B5FCA2EBF000ADB5389FFFF0A2241F7E9E29>I<B51280A23807F000B3A9B51280
A2111F7F9E14>I<B512C0A2D807F0C7FCB115C0A31401A3EC0380A21407141FB6FCA21A
1F7E9E1F>76 D<D8FFF0EC7FF86D14FF00071600D806FCEB01BFA3017EEB033FA26D1306
A290381F800CA390380FC018A2903807E030A2903803F060A3903801F8C0A2903800FD80
A2EC7F00A2143EA33BFFF01C07FFF8A22D1F7E9E32>I<D8FFF8EBFFF0A2D807FCEB0600
7F7F00061380137FEB3FC0EB1FE0EB0FF014F8EB07FC1303EB01FEEB00FFEC7F8615C6EC
3FE6141FEC0FF6EC07FE1403A214011400157E153E151EA2D8FFF0130E1506241F7E9E29
>I<EB1FF890B5FC3901F81F803907E007E0390FC003F0391F8001F890C7FC4814FC4814
FE007E147EA200FE147FA9007E147E007F14FEA26C14FCEB8001001F14F8390FC003F039
07E007E03901F81F806CB51200EB1FF8201F7D9E27>I<B512FEECFF803907F00FE0EC03
F0EC01F8A215FCA515F8A2EC03F0EC0FE090B51280ECFE0001F0C7FCACB57EA21E1F7E9E
24>I<B512F814FF3907F01FC0EC07E06E7EA281A45DA24A5AEC1FC090B5C7FC5C9038F0
3F806E7E81140FA61630A2EDF070913807F860B53881FFE09138807F80241F7E9E27>82
D<3803FC08380FFF38381E03F8EA3C00481378143812F814187E1400B4FC13F86CB4FC14
C06C13E06C13F06C13F8120338001FFC13011300A200C0137CA36C1378A200F813F038FE
01E038E7FFC000811300161F7D9E1D>I<007FB512FCA2397C0FE07C0070141C0060140C
A200E0140E00C01406A400001400B10007B512C0A21F1E7E9D24>I<B53881FFE0A23A07
F0000C00B3A3151C000314186D1338000114306C6C137090387F03E090381FFF80D903FC
C7FC231F7E9E28>I<B5EB3FF8A2D807F0EB038016006D5B000314066D130E0001140C7F
00005C7F6D5BA26D6C5AA2ECC0E0011F5B14E1010F5B14F1D907F3C7FC14FBEB03FEA36D
5AA26D5AA21470A2251F7F9E28>I<B53A1FFFC0FFE0A23C0FE001FC000E00D807F0150C
81EBF80000035E816D1538000149EB803015BFD800FE5D9138031FC001FF15E0017F6E5A
EC060FD93F86EBE180028E13F1ECCC07011F02F3C7FC9138D803FB02F813FF010F5CECF0
0101075CECE000A201035C4A1378010114704A1330331F7F9E36>I<B5EB3FF8A2D80FF8
EB03800007EC07006C6C13065D6C6C131C6C6C13185D90387F807090383FC0605DEB1FE1
90380FF18002F3C7FC6DB4FC6D5A5C1301AB90383FFFE0A2251F7F9E28>89
D<003FB51280A2EB807F393E00FF00383801FEA248485A5CEA6007495AA2C6485A495AA2
495A91C7FC5B485AEC0180EA03FCEA07F8A2380FF00313E0001F140048485A5C48485A38
FF007F90B5FCA2191F7D9E20>I<EA07FCEA1FFF383F0F80EB07C0EB03E0A2120C1200EA
01FF120FEA3F83EA7E03127C12F8A3EAFC07EA7E0D383FF9FE3807E07E17147F9319>97
D<B4FCA2121FAAEB1FC0EB7FF0EBE0F8EB807CEB007E143EA2143FA6143EA2147C138038
1EC1F8381C7FE038181F8018207E9F1D>I<EA01FE3807FF80381F0FC0123EA2127CEB03
0000FCC7FCA6127C127E003E1360003F13C0EA1F813807FF00EA01FC13147E9317>I<EB
07F8A21300AAEA01F8EA0FFEEA1F83EA3E01EA7E00127CA212FCA6127CA2127EEA3E01EA
1F07380FFEFFEA03F818207E9F1D>I<EA01FE3807FF80381F83E0383F01F0EA7E0014F8
5AA2B5FCA200FCC7FCA3127C127E003E1318003F1338380F80703807FFE0C6138015147F
9318>I<EB1F80EBFFC03801F3E0EA03E713C71207EBC3C0EBC000A5EAFFFCA2EA07C0B0
EA3FFCA213207F9F10>I<3801FC3C3807FFFE380F07DEEA1E03003E13E0A5001E13C038
0F0780EBFF00EA19FC0018C7FCA2121C381FFF8014F06C13F8003F13FC387C007C007013
3E00F0131EA30078133CA2383F01F8380FFFE000011300171E7F931A>I<B4FCA2121FAA
EB0FC0EB3FE0EB61F0EBC0F813801300AD38FFE3FFA218207D9F1D>I<121C127FA5121C
C7FCA6B4FCA2121FB0EAFFE0A20B217EA00E>I<B4FCA2121FAAEB01FEA2EB00F0EB01C0
EB0380EB0700131E1338137C13FE7F131F381E0F80EB07C014E0EB03F01301EB00F838FF
C3FFA218207E9F1C>107 D<B4FCA2121FB3AAEAFFE0A20B207E9F0E>I<3AFE0FE03F8090
393FF0FFC03A1E70F9C3E09039C07F01F0381F807EA2EB007CAC3AFFE3FF8FFEA227147D
932C>I<38FE0FC0EB3FE0381E61F0EBC0F8EA1F801300AD38FFE3FFA218147D931D>I<48
B4FC000713C0381F83F0383E00F8A248137CA200FC137EA6007C137CA26C13F8A2381F83
F03807FFC00001130017147F931A>I<38FF1FC0EB7FF0381FE1F8EB80FCEB007EA2143E
143FA6143E147E147CEB80FCEBC1F8EB7FE0EB1F8090C7FCA7EAFFE0A2181D7E931D>I<
EAFE3EEB7F80381ECFC0EA1F8FA3EB030090C7FCABEAFFF0A212147E9316>114
D<EA0FE6EA3FFEEA701EEA600EEAE006A2EAF800EAFFC0EA7FF8EA3FFCEA1FFE1203EA00
1FEAC007A212E0EAF006EAF81EEAFFFCEAC7F010147E9315>I<EA0180A31203A3120712
0F123FEAFFFCA2EA0F80AA1386A5EA07CCEA03F8EA01F00F1D7F9C14>I<38FF07F8A2EA
1F00AD1301A2EA0F073807FEFFEA03F818147D931D>I<39FFE07F80A2391F001C00380F
8018A26C6C5AA26C6C5AA26C6C5AA213F900005B13FF6DC7FCA2133EA2131CA219147F93
1C>I<3AFFE7FE1FE0A23A1F00F007006E7ED80F801306A23907C1BC0CA214BE3903E31E
18A23901F60F30A215B03900FC07E0A290387803C0A3903830018023147F9326>I<38FF
E1FFA2380F80706C6C5A6D5A3803E180EA01F36CB4C7FC137E133E133F497E136FEBC7C0
380183E0380381F0380701F8380E00FC39FF81FF80A219147F931C>I<39FFE07F80A239
1F001C00380F8018A26C6C5AA26C6C5AA26C6C5AA213F900005B13FF6DC7FCA2133EA213
1CA21318A2EA783012FC5BEAC0E0EAE1C0EA7F80001EC8FC191D7F931C>I
E /Fj 4 53 df<12035AB4FC1207B1EA7FF00C157E9412>49 D<EA0F80EA30E0EA407012
80EAC03812E01240EA00781370A213E013C0EA0180EA03001206EA0C081218EA1018EA3F
F0127F12FF0D157E9412>I<EA0FE0EA3070EA6038EA703C131CEA003C133813301360EA
07C0EA00701338131C131EA212E0A2EAC01CEA4038EA3070EA0FC00F157F9412>I<1330
A2137013F012011370120212041208121812101220124012C0EAFFFEEA0070A5EA03FE0F
157F9412>I E /Fk 77 125 df<90381F83E09038F06E303901C07878380380F8903800
F03048EB7000A7B61280A23907007000B0387FE3FFA21D20809F1B>11
D<133FEBE0C0EA01C0380381E0EA0701A290C7FCA6B512E0A2EA0700B0387FC3FEA21720
809F19>I<EB3FE013E0EA01C1EA0381EA0700A8B5FCA2EA0700B0387FE7FEA21720809F
19>I<EA7038EAF87CEAFC7EA2EA743AEA0402A3EA0804A2EA1008A2EA2010EA40200F0E
7E9F17>34 D<127012F812FCA212741204A31208A21210A212201240060E7C9F0D>39
D<132013401380EA0100120212065AA25AA25AA312701260A312E0AC1260A312701230A3
7EA27EA27E12027EEA0080134013200B2E7DA112>I<7E12407E7E7E120C7EA27EA2EA01
80A313C01200A313E0AC13C0A312011380A3EA0300A21206A25A12085A5A5A5A0B2E7DA1
12>I<1306AFB612F0A2D80006C7FCAF1C207D9A23>43 D<127012F812FCA212741204A3
1208A21210A212201240060E7C840D>I<EAFFC0A20A027F8A0F>I<127012F8A312700505
7C840D>I<1303A213071306A2130E130CA2131C1318A213381330A213701360A213E013
C0A212011380A312031300A25A1206A2120E120CA2121C1218A212381230A212701260A2
12E05AA2102D7DA117>I<EA03F0EA0E1C487E487EA238700380A300F013C0AD00701380
A338380700A2EA1C0E6C5AEA03F0121D7E9C17>I<EA01801203120F12FF12F31203B3A4
EAFFFEA20F1D7C9C17>I<EA07F0EA1FFCEA303FEA600F3840078000F013C012F81303A2
EA200712001480130F1400131E131C5B5B5BEA018048C7FC12024813405A5A481380EA7F
FFB5FCA2121D7E9C17>I<EA07F0EA1FFCEA301EEA780F1480A2EA3807EA000FA2140013
0E5B5BEA03F0EA001C7F130FEB078014C0A2122012F8A21480EAF00F00401300EA381EEA
1FFCEA07F0121D7E9C17>I<1306A2130E131E133E132E134E138E1201EA030E12021204
1208121812101220124012C0B512F0A238000E00A7EBFFE0A2141D7F9C17>I<EA1803EA
1FFE5B5B13E00010C7FCA6EA11F0EA160CEA1806EA100738000380A214C0A3127012F0A2
00E01380EA400738600F00EA381EEA1FF8EA07E0121D7E9C17>I<137CEA01FEEA078338
0E0380EA1C07A2383803000078C7FC1270A212F0EAF1F0EAF20CEAF406EAF807EB038012
F014C0A31270A3003813801307001C1300EA0E0EEA07FCEA03F0121D7E9C17>I<124038
7FFFC0A21480EA40003880010013025B12005B5B5BA21360134013C0A212015B1203A412
07A66CC7FC121E7D9D17>I<EA03F0EA0FFCEA1C0EEA3003382001801260A21270007813
00EA3E03EA3F06EA1FCCEA0FF0EA03F8487EEA087FEA303F38200F80386003C0EAC00113
00A43860018038700300EA3C0EEA0FFCEA03F0121D7E9C17>I<127012F8A312701200AA
127012F8A3127005147C930D>58 D<007FB512E0B612F0C9FCA8B612F06C14E01C0C7D90
23>61 D<EA0FC0EA3070EA4038A2EAE03C12F0A21260EA0038137013E013C0EA0180A213
005A1202A6C7FCA51207EA0F80A3EA07000E207D9F15>63 D<5B497EA3497EA3EB09E0A3
EB10F0A3EB2078A2EB607CEB403CA2EB803E141EEBFFFE487FEB000FA20002EB0780A300
06EB03C0120F39FFC03FFEA21F1F7F9E22>65 D<B512E014F83807803E141E141FEC0F80
A515005C141E5CEBFFF8EB803C80801580140715C0A51580140FEC1F00143EB512FC14F0
1A1F7E9E20>I<90381FC04090387FF0C03801F81D3803C00738078003380F0001001E13
00123E003C1440127CA20078140012F8A71278127C1540123C123E001E14807E39078001
003803C0023801F80C38007FF8EB1FE01A1F7D9E21>I<B512E014FC3807803E140FEC07
80EC03C015E0140115F01400A215F8A915F0A2140115E0A2EC03C0EC0780EC0F00143EB5
12FC14E01D1F7E9E23>I<B6FCA23807800F140380A215801400A21480A21500A2138113
FFA213811380A21520A214001540A315C0A21401EC0780B6FCA21B1F7E9E1F>I<B6FCA2
3807800F140380A215801400A21480A21500A2138113FFA213811380A491C7FCA8EAFFFE
A2191F7E9E1E>I<90380FE02090387FF8603901F80EE03803E0033807800148C7FC001E
1460123E003C1420127CA20078140012F8A6EC7FFC1278007CEB01E0A2123C123E121E7E
EA07803803E0033801F80E39007FFC6090380FE0201E1F7D9E24>I<39FFF8FFF8A23907
800F00AC90B5FCA2EB800FAD39FFF8FFF8A21D1F7E9E22>I<EAFFFCA2EA0780B3A9EAFF
FCA20E1F7F9E10>I<380FFFC0A238003C00B3A3122012F8A3485AEA4070EA30E0EA0F80
121F7E9E17>I<EAFFFEA2EA0780B11402A41406A21404140C141C147CB512FCA2171F7E
9E1C>76 D<B46CEB1FF8A200071500D805C0132FA3D804E0134FA20170138FA390383801
0FA3EB1C02A3EB0E04A3EB0708A3EB0390A2EB01E0A3380E00C03AFFE0C1FFF8A2251F7E
9E2A>I<39FF803FF813C00007EB03803905E00100A2EA04F01378A2133CA2131E130FA2
EB0781A2EB03C1EB01E1A2EB00F1A21479143DA2141FA28080A2000E7FEAFFE0801D1F7E
9E22>I<EB3FC0EBE0703803C03C48487E48487E001EEB0780A248EB03C0A2007C14E000
78130100F814F0A9007814E0007C1303A2003C14C06CEB0780A26CEB0F003807801E6C6C
5A3800F0F0EB3FC01C1F7D9E23>I<B512E014F83807807C141E141F801580A515005C14
1E147CEBFFF00180C7FCADEAFFFCA2191F7E9E1F>I<EB3FC0EBF0F03803C03C48487E48
487E001EEB0780A248EB03C0A2007C14E00078130100F814F0A9007814E0007C1303A200
3C14C0391E0F0780EB1087390F20CF003807A0DE3803E0FC3800F0F0013F1310EB0070A2
EC7830EC3870EC3FF015E0141FEC0FC0EC07801C287D9E23>I<B57E14E0380780F8143C
143E141E141FA5141E5C5C5CEBFF80EB81C0EB80E08014701478A3147CA31504147E143E
39FFFC1F18EC07E01E1F7E9E21>I<3807E080EA1FF9EA3C1FEA3007EA7003EAE0011300
A36C1300A21278127FEA3FF0EA1FFC6C7EEA03FF38001F801307EB03C0A213011280A300
C01380130300F01300EAFC0EEACFFCEA83F8121F7D9E19>I<007FB512E0A238780F0100
60EB006000401420A200C0143000801410A400001400B23807FFFEA21C1F7E9E21>I<39
FFFC3FF8A23907800380EC0100B3A30003130213C000015B3800E00CEB7838EB3FF0EB0F
C01D1F7E9E22>I<39FFF003FEA2390F8000F0156000071440A26C6C1380A27F0001EB01
00A23800F002A3EB7804A2EB7C0CEB3C08A26D5AA36D5AA214E06D5AA26D5AA36DC7FC1F
1F7F9E22>I<3BFFF07FF81FF0A23B0F0007800780EE010015C0D807801402A2EC0FE026
03C0095BA215F02601E0105BA33A00F0207810A3903978403C20A36D486C5AA390393F00
0FC06D5CA2011E1307010E91C7FCA2010C7F010413022C1F7F9E2F>I<397FF83FF8A239
07C007800003EB06003801E004EBF00C00001308EB7810137CEB3C20EB3E40131E6D5AA2
13076D7E497E1305EB09F0EB18F8EB1078EB207CEB603CEB401EEB801F00017F90380007
804814C0EA0F8039FFE01FFEA21F1F7F9E22>I<39FFF003FFA2390F8000F0000714407F
6C6C138012019038F0010000005BEBF802EB7C04133CEB3E08131EEB1F10EB0FB0EB07A0
14C01303ABEB7FFEA2201F7F9E22>I<387FFFF8A2387C00F01270386001E0EA400300C0
13C0EB07801280EB0F005BEA001E5BA25B13F85B485A1404EA03C012071380380F000CA2
001E1308003E1318123C481338EB01F8B5FCA2161F7D9E1C>I<EA0804EA1008EA2010A2
EA4020A2EA8040A3EAB85CEAFC7EA2EA7C3EEA381C0F0E7B9F17>92
D<EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E0E1238127800F01310A313
1E127838386720380F83C014147E9317>97 D<120E12FEA2120EA9133EEBC380380F01C0
EB00E0120E1470A21478A61470A214E0120F380D01C0380CC300EA083E15207F9F19>I<
EA03F8EA0E0CEA1C1E1238130CEA7000A212F0A61270A2EA3801A2EA1C02EA0E0CEA03F0
10147E9314>I<EB0380133FA21303A9EA03E3EA061BEA1C07EA3803A21270A212F0A612
70A212381307121C380E1BF8EA03E315207E9F19>I<EA03F0EA0E1C487E487EA21270EB
038012F0A2B5FC00F0C7FCA31270A26C13801218380C0100EA0706EA01F811147F9314>
I<137C13C6EA018F1203EA07061300A7EAFFF0A2EA0700B0EA7FF0A21020809F0E>I<38
03E1E0380E3A30EA1C1C38380E00EA780FA5EA380E6C5AEA1E38EA33E00020C7FCA21230
A2EA3FFE381FFF806C13C0383001E038600070481330A4006013606C13C0381C03803803
FC00141E7F9317>I<120E12FEA2120EA9133E1343EB8180380F01C0A2120EAD38FFE7FC
A216207F9F19>I<121C123EA3121CC7FCA6120E127EA2120EAFEAFFC0A20A1F809E0C>I<
13E0EA01F0A3EA00E01300A61370EA07F0A212001370B3A21260EAF06013C0EA6180EA3F
000C28829E0E>I<120E12FEA2120EA9EB0FF0A2EB0780EB02005B5B5B1330137013F8EA
0F38EA0E1C131E130E7F1480130314C038FFCFF8A215207F9F18>I<120E12FEA2120EB3
A9EAFFE0A20B20809F0C>I<390E1F01F039FE618618903881C81C390F00F00EA2000E13
E0AD3AFFE7FE7FE0A223147F9326>I<EA0E3EEAFE43EB8180380F01C0A2120EAD38FFE7
FCA216147F9319>I<EA01F8EA070E381C0380383801C0A2387000E0A200F013F0A60070
13E0A2383801C0A2381C038038070E00EA01F814147F9317>I<EA0E3E38FEC38038FF01
C0380F00E0120E14F014701478A6147014F014E0EA0F0114C0380EC300133E90C7FCA7EA
FFE0A2151D7F9319>I<3803E080EA0619EA1C05EA3C07EA38031278127012F0A6127012
7812381307EA1C0BEA0E13EA03E3EA0003A7EB3FF8A2151D7E9318>I<EA0E78EAFE8CEA
FF1E120F130CEA0E00ADEAFFE0A20F147F9312>I<EA1F90EA3070EA4030EAC010A3EAE0
001278EA7F80EA3FE0EA0FF0EA0070EA80381318A212C0A2EAE030EAD060EA8F800D147E
9312>I<1202A41206A2120EA2EA3FF812FFEA0E00AA1308A5EA06101203EA01E00D1C7F
9B12>I<380E01C0EAFE1FA2EA0E01AD1303120638030DFCEA01F116147F9319>I<38FF83
F8A2381E00E0000E1380A338070100A2EA0382A3EA01C4A213ECEA00E8A21370A3132015
147F9318>I<39FF9FE1FCA2391C0380701560000E1440A214C0D807071380130414E039
038861001471EBC8733801D032143A3800F03CEBE01CA2EB6018EB40081E147F9321>I<
387FC3FCA2380701C0148038038100EA01C2EA00E413EC13781338133C137C134E1387EA
010738030380380201C0000E13E038FF07FEA21714809318>I<38FF83F8A2381E00E000
0E1380A338070100A2EA0382A3EA01C4A213ECEA00E8A21370A31320A25BA3EAF080A200
F1C7FC1262123C151D7F9318>I<EA3FFFEA380E1220131CEA403813781370EA00E01201
13C0EA038012071301120E121EEA1C03EA3802EA7006130EEAFFFE10147F9314>I<B812
F02C01808C2D>124 D E /Fl 22 123 df<13181378EA01F812FFA21201B3A7387FFFE0
A213207C9F1C>49 D<EA03FCEA0FFF383C1FC0387007E0007C13F0EAFE0314F8A2130112
7CEA3803120014F0A2EB07E014C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA07
00000E1338380FFFF05A5A5AB5FCA215207D9F1C>I<1470A214F8A3497EA2497EA3EB06
FF80010E7FEB0C3FA201187F141F01387FEB300FA201607F140701E07F90B5FCA2390180
01FCA200038090C7FCA20006147FA23AFFE00FFFF8A225227EA12A>65
D<D903FE138090381FFF819038FF01E33901F8003FD803E0131F4848130F48481307121F
48C71203A2481401127EA200FE91C7FCA8127EED0180127F7E15036C6C1400120F6C6C13
06D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21227DA128>67
D<B67E15F03907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8A916F0A3ED
07E0A2ED0FC0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B612F8A23807F0
01EC007815381518151CA2150CA21418A21500A214381478EBFFF8A2EBF07814381418A4
91C7FCA8B512E0A21E227EA123>70 D<D903FE134090391FFFC0C090387F00F1D801F813
3F4848130FD807C01307000F1403485A48C71201A2481400127EA200FE1500A791380FFF
FC127E007F9038001FC0A27EA26C7E6C7E6C7E6C7ED801FC133F39007F80E790381FFFC3
0103130026227DA12C>I<B53883FFFEA23A07F0001FC0AD90B6FCA29038F0001FAFB538
83FFFEA227227EA12C>I<B6FC15E03907F007F0EC01FC1400157EA2157FA5157EA215FC
1401EC07F090B512E0150001F0C7FCADB57EA220227EA126>80 D<B512FEECFFC03907F0
07F0EC01F86E7E157E157FA6157E5D4A5AEC07F090B512C05D9038F00FE06E7E6E7E6E7E
A81606EC00FEEDFF0CB538803FF8ED0FF027227EA12A>82 D<EBFF80000713E0380F83F0
EA1F03123E127E387C01E090C7FC12FCA6127C127EA2003E13306C1360380FC0E03807FF
803800FE0014167E9519>99 D<13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F8
12FCA2B5FCA200FCC7FCA3127CA2127E003E13186C1330380FC0703803FFC0C613001516
7E951A>101 D<3801FE1F0007B51280380F87E7EA1F03391E01E000003E7FA5001E5BEA
1F03380F87C0EBFF80D819FEC7FC0018C8FC121CA2381FFFE014F86C13FE80123F397C00
3F8048131F140FA3007CEB1F00007E5B381F80FC6CB45A000113C019217F951C>103
D<B47EA2121FABEB87E0EB9FF8EBB8FCEBE07CEBC07EA21380AE39FFF1FFC0A21A237EA2
1F>I<120E121FEA3F80A3EA1F00120EC7FCA7EAFF80A2121FB2EAFFF0A20C247FA30F>I<
38FF87E0EB9FF8381FB8FCEBE07CEBC07EA21380AE39FFF1FFC0A21A167E951F>110
D<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137EA7007C137CA26C13F8
381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF8FE0EBBFF8381FF07CEBC0
3E497E1580A2EC0FC0A8EC1F80A2EC3F00EBC03EEBE0FCEBBFF8EB8FC00180C7FCA8EAFF
F0A21A207E951F>I<EAFF1FEB3FC0381F67E013C7A3EB83C0EB8000ADEAFFF8A213167E
9517>114 D<EA07F3EA1FFFEA780FEA7007EAF003A26CC7FCB4FC13F0EA7FFC6C7E6C7E
120738003F80EAC00F130712E0A200F01300EAFC1EEAEFFCEAC7F011167E9516>I<13C0
A41201A212031207120F121FB5FCA2EA0FC0ABEBC180A51207EBE300EA03FEC65A11207F
9F16>I<387FFFF0A2387C07E038700FC0EA601F00E0138038C03F005B13FEC65A120148
5AEBF0301207EA0FE0EBC070EA1F80003F1360EB00E0EA7E03B5FCA214167E9519>122
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 342 194 a Fl(A)19 b(Recip)r(e)f(F)-5 b(or)19
b(Correcting)g(the)f(12)h(GHz)f(Dish)i(P)n(oin)n(ting)819
291 y Fk(Erik)c(Shirok)o(o\013)1111 274 y Fj(1)752 353
y Fk(W)l(ritten)f(July)h(10,)f(2001.)686 415 y(Last)g(revised)h(August)
f(17,)g(2001)567 591 y Fi(1.)52 b(Before)17 b(y)o(ou)g(read)g(this)h
(do)q(cumen)o(t.)91 678 y Fk(Y)l(ou)i(ma)o(y)e(w)o(an)o(t)g(to)h(tak)o
(e)g(a)g(lo)q(ok)h(at)e Fh(The)i(BURA)o(O)g(12)g(GHz)g(A)o(ntenna)f
(Mount)h(Do)n(cumentation)p Fk(,)g(b)o(y)0 740 y(Curtis)g(F)l(rank.)33
b(That)19 b(do)q(cumen)o(t)h(describ)q(es)h(the)f(construction)g(of)f
(the)h(dish)g(moun)o(t)f(assem)o(blies)i(and)f(the)0
803 y(exp)q(ected)h(p)q(oin)o(ting)g(errors)e(in)i(detail.)693
786 y Fj(2)748 803 y Fk(If)f(y)o(ou)f(are)h(in)h(a)e(h)o(urry)h(and)g
(y)o(ou)g(are)f(willing)j(to)e(simply)h(accept)0 865
y(the)c(form)f(of)g(the)h(p)q(oin)o(ting)h(errors)e(without)g
(justi\014cation,)i(then)f(y)o(ou)f(can)h(skip)h(the)e(moun)o(t)h(do)q
(cumen)o(t)g(and)0 927 y(con)o(tin)o(ue.)j(If)14 b(y)o(ou)f(are)g(in)h
(an)f(extreme)h(h)o(urry)l(,)f(then)h(y)o(ou)f(can)h(skip)g(ahead)f(to)
g(section)h(7)f(for)g(a)g(list)h(of)f(the)h(steps)0 989
y(required)i(to)f(obtain)g(corrections)h(in)g(outline)g(form.)698
1155 y Fi(2.)52 b(A)17 b(general)h(summary)l(.)91 1243
y Fk(The)11 b(12)f(GHz)g(dish)i(moun)o(ts)e(are)g(precise)i(to)e
(within)h(a)g(few)f(ten)o(ths)g(of)g(a)h(degree,)g(ho)o(w)o(ev)o(er)f
(their)h(accuracy)f(is)0 1305 y(limited)15 b(b)o(y)d(the)h(p)q
(ositioning)i(of)d(their)i(altitude)f(and)h(azim)o(uth)f(zero)f(p)q
(oin)o(ts,)i(and)f(b)o(y)g(the)f(sligh)o(t)i(misalignmen)o(t)0
1367 y(of)g(the)g(feed)h(horn,)f(dish)i(surface,)e(and)g(supp)q(orting)
h(assem)o(bly)l(.)20 b(It)15 b(is)f(tec)o(hnically)j(infeasible)f(to)e
(remo)o(v)o(e)g(these)0 1429 y(misalignmen)o(ts,)h(so)g(in)g(stead)g(w)
o(e)f(comp)q(ensate)h(for)f(the)h(errors)f(with)h(soft)o(w)o(are)d
(corrections.)20 b(This)c(do)q(cumen)o(t)0 1491 y(describ)q(es)h(the)e
(pro)q(cedures)h(dev)o(elop)q(ed)h(for)e(\014nding)h(and)f(using)h
(appropriate)g(corrections.)91 1559 y(An)o(y)i(time)g(the)g(dish)h
(assem)o(bly)f(set)g(screws)g(are)f(remo)o(v)o(ed)h(or)f(adjusted,)h
(it)h(will)g(b)q(e)g(necessary)f(to)f(\014nd)0 1621 y(new)e(p)q(oin)o
(ting)i(correction)e(constan)o(ts.)601 1787 y Fi(3.)52
b(The)18 b(t)o(yp)q(e)f(of)h(errors)e(exp)q(ected.)91
1875 y Fk(F)l(rom)e(the)i(w)o(a)o(y)e(the)h(moun)o(ts)g(are)g
(constructed,)g(w)o(e)f(exp)q(ect)i(the)g(follo)o(wing)g(t)o(yp)q(es)f
(of)g(errors)f(to)h(arise:)23 1977 y Fi(Dial)20 b(O\013sets)c
Fk(are)g(constan)o(t)g(o\013sets)g(in)h(b)q(oth)g(the)f(altitude)i(and)
f(azim)o(uth)f(directions)i(whic)o(h)g(result)f(from)114
2039 y(the)e(misalignmen)o(t)h(of)f(enco)q(der)h(zero)f(from)g(true)g
(\(b)q(eam\))f(zero.)23 2133 y Fi(Sk)o(ew)h Fk(or)h Fh(b)n(e)n(am)g
(skew)21 b Fk(is)16 b(an)g(altitude)h(dep)q(enden)o(t)g(azim)o(uth)g
(error)e(asso)q(ciated)h(with)g(horn)g(alignmen)o(t.)23
b(W)l(e)114 2195 y(exp)q(ect)16 b(it)f(to)g(b)q(e)g(of)g(the)h(form)e
Fg(S)h Fk(=)e Fg(S)780 2179 y Ff(0)791 2195 y Fg(=)8
b Fk(cos)o(\()p Fg(ALT)e Fk(\).)23 2290 y Fi(Flop)12
b Fk(or)e Fh(b)n(e)n(am)j(\015op)h Fk(is)e(an)f(altitude)i(dep)q(enden)
o(t)f(altitude)h(error)d(asso)q(ciated)i(with)g(a)f(\015exing)h(of)f
(the)g(dish)i(hard-)114 2352 y(w)o(are)e(with)h(c)o(hanging)h(orien)o
(tation)f(relativ)o(e)g(to)f(the)i(direction)g(of)e(gra)o(vit)o(y)l(.)
18 b(It)12 b(should)h(go)f(appro)o(ximately)114 2414
y(as)i Fg(F)20 b Fk(=)13 b Fg(F)301 2397 y Ff(0)320 2414
y Fk(cos\()p Fg(ALT)6 b Fk(\).)p 0 2475 780 2 v 52 2529
a Fe(1)69 2545 y Fd(email:)18 b(shiro@UGAstro.b)q(erk)o(eley)m(.edu)52
2603 y Fe(2)69 2619 y Fd(Section)d(4.4)e(at)g(the)g(end)h(of)f(that)g
(do)q(cumen)o(t)h(describ)q(es)h(the)e(algebraic)j(metho)q(d)e(for)e
(deriving)k(p)q(oin)o(ting)g(corrections,)e(whic)o(h)0
2669 y(is)g(extremely)g(unreliable)i(and)e(will)g(not)f(b)q(e)h(used)f
(here.)p eop
%%Page: 2 2
2 1 bop 91 194 a Fk(There)14 b(is)h(a)e(sign)i(am)o(biguit)o(y)f(in)h
(the)f(w)o(a)o(y)f(these)h(terms)g(are)g(de\014ned.)21
b(Throughout)13 b(this)h(do)q(cumen)o(t,)h(and)0 257
y(in)i(all)f(the)g(soft)o(w)o(are,)e(w)o(e)i(will)h(refer)f(to)f(the)h
(corrections)g(rather)f(than)h(the)g(errors.)21 b(The)16
b(rep)q(orted)g(constan)o(ts)0 319 y(are)e(therefore)g(added)h(to)e
(the)h(true)h(source)f(p)q(osition)h(in)g(order)f(to)g(arriv)o(e)g(at)f
(the)i(enco)q(der)g(p)q(osition)g(one)f(needs)0 381 y(in)g(order)f(to)g
(p)q(oin)o(t)h(to)f(the)h(righ)o(t)f(place)h(in)g(the)g(sky)l(.)19
b(F)l(or)13 b(example,)h(if)g(the)g(altitude)g(rep)q(orted)g(b)o(y)f
(the)h(dishes)g(is)0 443 y(to)q(o)g(high)i(y)o(ou)e(should)i(arriv)o(e)
f(at)f(a)h(negativ)o(e)f Fh(dial)i(o\013set)j Fk(equal)d(to)e(the)h
(source)g(p)q(osition)h(min)o(us)f(the)g(enco)q(der)0
505 y(p)q(osition)21 b(at)e(whic)o(h)i(the)e(dishes)i(p)q(oin)o(t)g(to)
o(w)o(ard)d(the)i(source.)33 b(The)20 b(negativ)o(e)g(quan)o(tit)o(y)l
(,)g(when)h(added)f(to)f(a)0 567 y(source)14 b(p)q(osition,)h(will)h
(result)e(in)h(a)f(lo)o(w)o(er)g(v)m(alue)h(for)e(the)h(altitude.)21
b(This)15 b(lo)o(w)o(ered)f(v)m(alue,)h(when)f(sen)o(t)g(to)g(serv)o(o)
0 629 y(con)o(trollers,)h(will)i(result)f(in)g(the)f(dishes)h(p)q(oin)o
(ting)h(to)d(the)h(correct)g(place)h(in)g(the)g(sky)l(.)91
697 y(When)f(y)o(ou)g(put)h(all)g(these)f(corrections)h(together,)e(y)o
(ou)g(get)h(the)g(follo)o(wing)h(form)o(ulae:)23 815
y Fi(F)l(orw)o(ard)g(mo)q(de)540 877 y Fg(ALT)i Fk(=)13
b Fg(ALT)790 884 y Fc(sour)q(ce)904 877 y Fk(+)e Fg(D)q(I)t(AL)1078
884 y Fc(alt)1132 877 y Fk(+)f Fg(F)1212 858 y Ff(0)1232
877 y Fk(cos\()p Fg(ALT)1403 884 y Fc(sour)q(ce)1506
877 y Fk(\))368 b(\(1\))562 966 y Fg(AZ)16 b Fk(=)d Fg(AZ)756
973 y Fc(sour)q(ce)870 966 y Fk(+)e Fg(D)q(I)t(AL)1044
973 y Fc(az)1092 966 y Fk(+)f Fg(S)1168 948 y Ff(0)1179
966 y Fg(=)e Fk(cos\()p Fg(ALT)1381 973 y Fc(sour)q(ce)1484
966 y Fk(\))390 b(\(2\))23 1074 y Fi(Rev)o(erse)16 b(Mo)q(de)540
1136 y Fg(ALT)i Fk(=)13 b Fg(ALT)790 1143 y Fc(sour)q(ce)904
1136 y Fk(+)e Fg(D)q(I)t(AL)1078 1143 y Fc(alt)1132 1136
y Fb(\000)f Fg(F)1212 1117 y Ff(0)1232 1136 y Fk(cos\()p
Fg(ALT)1403 1143 y Fc(sour)q(ce)1506 1136 y Fk(\))368
b(\(3\))562 1225 y Fg(AZ)16 b Fk(=)d Fg(AZ)756 1232 y
Fc(sour)q(ce)870 1225 y Fk(+)e Fg(D)q(I)t(AL)1044 1232
y Fc(az)1092 1225 y Fb(\000)f Fg(S)1168 1207 y Ff(0)1179
1225 y Fg(=)e Fk(cos\()p Fg(ALT)1381 1232 y Fc(sour)q(ce)1484
1225 y Fk(\))390 b(\(4\))91 1343 y(It)19 b(is)g(imp)q(ortan)o(t)f(to)g
(note)h(that)f(the)h(v)m(alues)h(for)e(eac)o(h)h(correction)g(ma)o(y)f
(b)q(e)h(di\013eren)o(t)g(for)f(the)h(forw)o(ard)0 1405
y(and)14 b(rev)o(erse)f(cases.)19 b(\(In)14 b(practice,)g(the)f(azim)o
(uth)h(corrections)f(seem)h(to)e(b)q(e)i(consisten)o(t)g(b)q(et)o(w)o
(een)f(the)h(t)o(w)o(o,)e(but)0 1467 y(b)q(oth)i(altitude)g
(corrections)g(are)g(often)f(quite)h(distinct.\))21 b(The)14
b(soft)o(w)o(are)d(\(whic)o(h)k(will)g(b)q(e)f(describ)q(ed)i(in)e
(section)0 1530 y(6\))j(returns)h(v)m(alues)h(for)e(b)q(oth)h(the)g
(separate)f(and)h(com)o(bined)h(cases,)f(and)g(y)o(ou)f(should)i
(decide)h(whic)o(h)e(to)g(use)0 1592 y(after)c(visually)j(insp)q
(ecting)h(the)d(\014ts.)536 1758 y Fi(4.)51 b(Actually)19
b(\014nding)f(these)g(corrections.)91 1845 y Fk(So,)d(no)o(w)g(that)f
(w)o(e)i(kno)o(w)e(what)h(sort)g(of)g(errors)f(to)h(exp)q(ect,)h(ho)o
(w)f(do)g(w)o(e)g(actually)h(go)f(ab)q(out)g(calculating)0
1907 y(them?)91 1975 y(The)f(answ)o(er)f(is)i(straigh)o(tforw)o(ard:)i
(Find)d(a)g(strong)f(source)h(with)g(a)g(kno)o(wn)f(p)q(osition,)i(and)
f(lo)q(cate)g(it)h(with)0 2038 y(the)i(dishes.)28 b(Record)18
b(the)g(di\013erence)g(b)q(et)o(w)o(een)g(its)f(true)h(p)q(osition,)g
(and)g(the)f(enco)q(der)i(p)q(osition)f(required)h(to)0
2100 y(lo)q(cate)c(it)f(in)h(the)g(sky)l(.)k(Rep)q(eat)c(for)f(a)g
(series)h(of)f(di\013eren)o(t)g(p)q(ositions,)h(and)g(p)q(erform)f(a)g
(least)g(squares)g(\014t)g(to)g(the)0 2162 y(resulting)i(list)g(of)f
(errors)f(to)h(\014nd)h(a)f(v)m(alue)h(for)f(the)g(correction)g
(constan)o(ts.)91 2230 y(In)g(practice,)h(w)o(e)e(use)h(the)g(sun)h(as)
e(the)h(source.)20 b(In)c(order)e(to)g(lo)q(cate)i(it)f(in)g(the)g(sky)
l(,)g(w)o(e)g(sw)o(eep)g(across)f(the)0 2292 y(sun's)g(p)q(osition)h
(in)g(b)q(oth)g(the)f(azim)o(uth)h(and)f(altitude)h(direction)h(while)g
(measuring)e(the)g(total)g(p)q(o)o(w)o(er)g(receiv)o(ed)0
2354 y(b)o(y)e(eac)o(h)h(dish.)19 b(Assuming)13 b(the)g(sun)f(is)h
(somewhere)f(in)i(our)e(observ)o(ed)g(\014eld,)i(the)e(resulting)h(p)q
(o)o(w)o(er)f(v/s)g(p)q(osition)0 2416 y(plot)h(will)h(lo)q(ok)g(lik)o
(e)g(a)e(Gaussian)h(with)g(a)f(with)i(on)e(the)h(order)g(of)f(t)o(w)o
(o)g(or)g(three)h(ph)o(ysical)1529 2400 y Fj(3)1563 2416
y Fk(degrees.)19 b(The)13 b(cen)o(ter)0 2478 y(of)j(the)g(Gaussian)g
(is)h(found,)f(using)h(a)f(non-linear)i(least)e(squares)g(\014t,)g(and)
h(that)e(v)m(alue)j(is)e(compared)g(to)g(sun's)p 0 2546
780 2 v 52 2599 a Fe(3)69 2615 y Fd(Since)h(w)o(e)d(record)i(altitudes)
h(and)f(azim)o(uths,)h(the)e(apparen)o(t)h(size)g(of)f(the)g(sun)h(in)g
(the)f(azim)o(uth)i(direction)g(will)g(v)n(ary)e(as)h(the)0
2665 y(cosine)e(of)f(the)g(altitude.)964 2793 y Fk(2)p
eop
%%Page: 3 3
3 2 bop 0 194 a Fk(actual)19 b(p)q(osition.)31 b(After)18
b(collecting)j(dozens)e(of)f(these)h(o\013sets,)f(they)h(can)g(b)q(e)g
(mapp)q(ed)h(against)e(the)h(source)0 257 y(altitude)d(the)f(p)q(oin)o
(ting)i(corrections)e(calculated.)809 422 y Fi(5.)52
b(Hardw)o(are.)390 2186 y @beginspecial 0 @llx 0 @lly
362 @urx 524 @ury 2808 @rwi @setspecial
%%BeginDocument: ptcorr_diagram.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-107.0 609.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 11137 m -1000 -1000 l 8812 -1000 l 8812 11137 l cp clip
 0.06000 0.06000 sc
/Times-Roman ff 180.00 scf sf
4890 5220 m
gs 1 -1 sc (Dig. Line) col0 sh gr
% Polyline
7.500 slw
n 6375 4275 m 7425 4275 l 7425 4800 l 6375 4800 l cp gs col0 s gr 
/Times-Roman ff 210.00 scf sf
6525 4575 m
gs 1 -1 sc (Coupler) col0 sh gr
/Times-Roman ff 210.00 scf sf
6975 5025 m
gs 1 -1 sc (OUT) col0 sh gr
/Times-Roman ff 210.00 scf sf
6000 4800 m
gs 1 -1 sc (CPL) col0 sh gr
/Times-Roman ff 210.00 scf sf
7050 4125 m
gs 1 -1 sc (IN) col0 sh gr
% Polyline
n 4350 9375 m 5325 9375 l 5325 10050 l 4350 10050 l cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4500 9750 m
gs 1 -1 sc (Detector) col0 sh gr
% Polyline
n 6375 9375 m 7425 9375 l 7425 10125 l 6375 10125 l cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
6675 9675 m
gs 1 -1 sc (Panel) col0 sh gr
/Times-Roman ff 180.00 scf sf
6675 9915 m
gs 1 -1 sc (DVM) col0 sh gr
% Polyline
n 2400 4275 m 3450 4275 l 3450 4800 l 2400 4800 l cp gs col0 s gr 
/Times-Roman ff 210.00 scf sf
2550 4575 m
gs 1 -1 sc (Coupler) col0 sh gr
/Times-Roman ff 210.00 scf sf
3000 5025 m
gs 1 -1 sc (OUT) col0 sh gr
/Times-Roman ff 210.00 scf sf
2025 4800 m
gs 1 -1 sc (CPL) col0 sh gr
/Times-Roman ff 210.00 scf sf
3075 4125 m
gs 1 -1 sc (IN) col0 sh gr
% Polyline
n 4350 3675 m 5250 3675 l 5250 4950 l 4350 4950 l cp gs col0 s gr 
/Times-Roman ff 210.00 scf sf
4575 4050 m
gs 1 -1 sc (Wall ) col0 sh gr
/Times-Roman ff 210.00 scf sf
4575 4320 m
gs 1 -1 sc (Rack) col0 sh gr
/Times-Roman ff 210.00 scf sf
4575 4590 m
gs 1 -1 sc (TTL) col0 sh gr
/Times-Roman ff 210.00 scf sf
4575 4860 m
gs 1 -1 sc (Box) col0 sh gr
/Times-Roman ff 210.00 scf sf
4245 6075 m
gs 1 -1 sc (Dig. Breakout) col0 sh gr
% Polyline
n 3945 5550 m 5745 5550 l 5745 6375 l 3945 6375 l cp gs col0 s gr 
% Arc
gs n 4330.4 7887.6 149.8 100.2 -80.2 arcn
gs col0 s gr
 gr

% Arc
gs n 4246.6 7887.6 149.8 -99.8 79.8 arcn
gs col0 s gr
 gr

% Ellipse
n 4281 8040 37 37 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4296 7890 54 54 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 282.80 522.40]  PATmp PATsp ef gr PATusp gs col0 s gr

% Arc
gs n 5339.4 7902.6 149.8 100.2 -80.2 arcn
gs col0 s gr
 gr

% Arc
gs n 5255.6 7902.6 149.8 -99.8 79.8 arcn
gs col0 s gr
 gr

% Ellipse
n 5290 8055 37 37 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5305 7905 54 54 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 350.07 523.40]  PATmp PATsp ef gr PATusp gs col0 s gr

/Times-Roman ff 180.00 scf sf
5565 7035 m
gs 1 -1 sc (Y) col0 sh gr
/Times-Roman ff 180.00 scf sf
5565 7275 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 180.00 scf sf
5130 7035 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman ff 180.00 scf sf
5130 7275 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 180.00 scf sf
4350 7035 m
gs 1 -1 sc (G) col0 sh gr
/Times-Roman ff 180.00 scf sf
4350 7275 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 180.00 scf sf
3900 7035 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 180.00 scf sf
3900 7275 m
gs 1 -1 sc (D) col0 sh gr
% Polyline
n 3900 8100 m 5700 8100 l 5700 8925 l 3900 8925 l cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4425 8475 m
gs 1 -1 sc (Crystal ) col0 sh gr
/Times-Roman ff 180.00 scf sf
4425 8715 m
gs 1 -1 sc (RF Switch) col0 sh gr
/Times-Roman ff 180.00 scf sf
3630 7965 m
gs 1 -1 sc (Dig A) col0 sh gr
/Times-Roman ff 180.00 scf sf
5595 7965 m
gs 1 -1 sc (Dig B) col0 sh gr
/Times-Roman ff 180.00 scf sf
5805 8685 m
gs 1 -1 sc (RF B) col0 sh gr
/Times-Roman ff 180.00 scf sf
4905 9135 m
gs 1 -1 sc (OUT) col0 sh gr
% Polyline
n 1800 2475 m 7800 2475 l 7800 3150 l 1800 3150 l cp gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
2730 2280 m 2700 2400 l 2670 2280 l 2670 2445 l 2730 2445 l cp
clip
n 2700 1950 m 2700 2400 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2730 2280 m 2700 2400 l 2670 2280 l 2700 2280 l 2730 2280 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
6705 2280 m 6675 2400 l 6645 2280 l 6645 2445 l 6705 2445 l cp
clip
n 6675 1950 m 6675 2400 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6705 2280 m 6675 2400 l 6645 2280 l 6675 2280 l 6705 2280 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
6705 4155 m 6675 4275 l 6645 4155 l 6645 4320 l 6705 4320 l cp
clip
n 6675 3150 m 6675 4275 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6705 4155 m 6675 4275 l 6645 4155 l 6675 4155 l 6705 4155 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
5820 8430 m 5700 8400 l 5820 8370 l 5655 8370 l 5655 8430 l cp
clip
n 6675 4800 m 6675 8400 l 5700 8400 l gs col0 s gr gr

% arrowhead
7.500 slw
n 5820 8430 m 5700 8400 l 5820 8370 l 5820 8400 l 5820 8430 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
3705 8370 m 3825 8400 l 3705 8430 l 3870 8430 l 3870 8370 l cp
clip
n 2850 4800 m 2850 8400 l 3825 8400 l gs col0 s gr gr

% arrowhead
7.500 slw
n 3705 8370 m 3825 8400 l 3705 8430 l 3705 8400 l 3705 8370 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
2805 4155 m 2775 4275 l 2745 4155 l 2745 4320 l 2805 4320 l cp
clip
n 2775 3150 m 2775 4275 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2805 4155 m 2775 4275 l 2745 4155 l 2775 4155 l 2805 4155 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
4830 9255 m 4800 9375 l 4770 9255 l 4770 9420 l 4830 9420 l cp
clip
n 4800 8925 m 4800 9375 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4830 9255 m 4800 9375 l 4770 9255 l 4800 9255 l 4830 9255 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
6255 9720 m 6375 9750 l 6255 9780 l 6420 9780 l 6420 9720 l cp
clip
n 5325 9750 m 6375 9750 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6255 9720 m 6375 9750 l 6255 9780 l 6255 9750 l 6255 9720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
5325 7680 m 5295 7800 l 5265 7680 l 5265 7845 l 5325 7845 l cp
clip
n 5295 6390 m 5295 7800 l gs col0 s gr gr

% arrowhead
7.500 slw
n 5325 7680 m 5295 7800 l 5265 7680 l 5295 7680 l 5325 7680 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
4320 7665 m 4290 7785 l 4260 7665 l 4260 7830 l 4320 7830 l cp
clip
n 4290 6375 m 4290 7785 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4320 7665 m 4290 7785 l 4260 7665 l 4290 7665 l 4320 7665 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
4125 7665 m 4095 7785 l 4065 7665 l 4065 7830 l 4125 7830 l cp
clip
n 4095 6375 m 4095 7785 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4125 7665 m 4095 7785 l 4065 7665 l 4095 7665 l 4125 7665 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
5505 7680 m 5475 7800 l 5445 7680 l 5445 7845 l 5505 7845 l cp
clip
n 5475 6390 m 5475 7800 l gs col0 s gr gr

% arrowhead
7.500 slw
n 5505 7680 m 5475 7800 l 5445 7680 l 5475 7680 l 5505 7680 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
4845 5355 m 4815 5475 l 4785 5355 l 4785 5520 l 4845 5520 l cp
clip
n 4815 4980 m 4815 5475 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4845 5355 m 4815 5475 l 4785 5355 l 4815 5355 l 4845 5355 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 210.00 scf sf
2925 2400 m
gs 1 -1 sc (A IN) col0 sh gr
/Times-Roman ff 210.00 scf sf
2925 2100 m
gs 1 -1 sc (East ) col0 sh gr
/Times-Roman ff 210.00 scf sf
6825 2175 m
gs 1 -1 sc (West) col0 sh gr
/Times-Roman ff 210.00 scf sf
6825 2400 m
gs 1 -1 sc (B IN) col0 sh gr
/Times-Roman ff 210.00 scf sf
3525 2925 m
gs 1 -1 sc (Push Button Amp / Attenuator Box) col0 sh gr
/Times-Roman ff 210.00 scf sf
2925 3450 m
gs 1 -1 sc (A OUT) col0 sh gr
/Times-Roman ff 210.00 scf sf
6825 3375 m
gs 1 -1 sc (B OUT) col0 sh gr
/Times-Roman ff 180.00 scf sf
4650 6585 m
gs 1 -1 sc (OUT) col0 sh gr
/Times-Roman ff 180.00 scf sf
3405 8670 m
gs 1 -1 sc (RF A) col0 sh gr
/Times-Roman ff 180.00 scf sf
5400 9960 m
gs 1 -1 sc (DC) col0 sh gr
/Times-Roman ff 180.00 scf sf
4935 5490 m
gs 1 -1 sc (IN) col0 sh gr
/Times-Roman ff 210.00 scf sf
3600 1575 m
gs 1 -1 sc (Usual 12 GHz Configuration) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 0 2287 a Fk(Fig.)20 b(1.|)15 b(The)g(setup)h(for)e
(\014nding)j(p)q(oin)o(ting)f(corrections.)91 2457 y(The)f(hardw)o(are)
g(should)h(b)q(e)g(set)f(up)h(according)f(to)g(\014gure)30
b(1.)91 2525 y(Y)l(ou)21 b(ma)o(y)f(c)o(ho)q(ose)g(to)g(lea)o(v)o(e)h
(the)f(150)g(MHz)h(IF)f(bandpass)h(\014lters)g(in)g(line,)j(or)c(to)g
(remo)o(v)o(e)f(them.)36 b(In)0 2588 y(principle,)17
b(remo)o(ving)e(them)f(should)i(help)g(the)f(signal)g(to)f(noise)h
(ratio,)f(ho)o(w)o(ev)o(er)g(the)h(sun)g(is)g(so)f(strong)g(that)g(it)0
2650 y(mak)o(es)h(little)h(di\013erence.)964 2793 y(3)p
eop
%%Page: 4 4
4 3 bop 91 194 a Fk(Chec)o(k)16 b(y)o(our)g(signal)h(lev)o(els)g(with)f
(an)g(oscilloscop)q(e)i(at)e(the)g(output)g(of)g(the)g(amp)g(and)g
(atten)o(uator)e(panel.)0 257 y(If)g(y)o(ou)f(see)h(a)g(hard)g(edge)g
(on)f(either)i(side)g(of)e(the)h(trace,)f(it)h(means)g(that)f(the)h
(signal)g(lev)o(el)h(is)g(to)q(o)e(high.)20 b(Use)14
b(the)0 319 y(push)o(button)h(atten)o(uators)f(to)h(bring)g(it)h(to)e
(a)h(reasonable)h(lev)o(el.)91 387 y(With)21 b(the)g(dishes)h(p)q(oin)o
(ting)g(a)o(w)o(a)o(y)d(from)h(the)h(sun,)h(c)o(hec)o(k)f(the)g(v)o
(oltage)f(coming)i(from)e(the)h(detector.)0 449 y(Switc)o(h)g(the)g
(crystal)g(switc)o(h)f(on)h(and)g(o\013)f(man)o(ually)h(and)g(note)f
(the)h(v)o(oltage)f(lev)o(el)i(at)e(eac)o(h)h(p)q(oin)o(t.)37
b(With)0 511 y(practice,)21 b(y)o(ou)f(should)g(get)g(a)f(feel)i(for)e
(what)g(bac)o(kground)g(lev)o(els)i(w)o(ork)e(b)q(est.)34
b(If)20 b(y)o(our)f(lev)o(el)i(is)f(to)q(o)g(high,)0
573 y(things)15 b(will)h(saturate)d(when)i(p)q(oin)o(ting)h(to)e(the)g
(sun,)h(while)h(lo)o(w)e(lev)o(els)i(are)e(more)g(prone)h(to)e(meter)i
(\015utter)f(and)0 635 y(seem)g(to)e(pro)q(duce)j(distorted)e(Gaussian)
h(\(p)q(erhaps)g(due)g(to)f(a)g(nonlinear)i(region)f(in)g(the)g
(detector.\))k(I'v)o(e)c(found)0 697 y(that)g(a)h(v)o(oltage)f(near)h
(-150)g(mV)f(when)i(p)q(oin)o(ting)g(to)e(the)h(zenith)i(results)e(in)h
(v)o(ery)f(w)o(ell)g(b)q(eha)o(v)o(ed)h(drift)f(curv)o(es.)823
863 y Fi(6.)52 b(Soft)o(w)o(are.)669 951 y(6.1.)g(General)18
b(information.)91 1039 y Fk(Quite)g(a)e(bit)i(of)e(soft)o(w)o(are)f
(has)i(b)q(een)h(written)f(to)f(help)i(\014nd)g(p)q(oin)o(ting)g
(corrections.)25 b(Most)16 b(of)g(it)h(can)g(b)q(e)0
1101 y(found)j(in)g(the)f(directory)g Fa(/home/ay120b/idl/ptcorr/)p
Fk(,)e(and)i(it)h(should)g(should)g(ha)o(v)o(e)f(do)q(c)p
1693 1101 14 2 v 17 w(library)h(st)o(yle)0 1163 y(do)q(cumen)o(tation,)
j(except)g(for)e(some)g(of)g(the)h(widget)g(elemen)o(ts.)40
b(Please)22 b(refer)g(to)f(the)h(library)g(info)g(for)f(a)0
1225 y(complete)16 b(and)f(up)q(dated)h(list)g(of)f(k)o(eyw)o(ords)f
(and)i(parameters.)791 1391 y Fi(6.2.)51 b(Programs.)23
1478 y(SCANNER)22 b Fk(This)h(widget)g(based)g(program)f(handles)i
(data)e(collection.)44 b(T)l(o)22 b(in)o(v)o(ok)o(e)h(it,)h(simply)g(t)
o(yp)q(e)114 1541 y(SCANNER)12 b(in)g(IDL.)f(Options)h(and)g(settings)f
(are)g(selected)i(in)o(teractiv)o(ely)l(.)20 b(T)l(o)11
b(start)f(taking)h(data,)g(mak)o(e)114 1603 y(a)17 b(directory)i(in)o
(to)f(whic)o(h)h(that)e(data)g(will)j(b)q(e)f(stored.)28
b(Then)18 b(place)h(that)f(directory)g(\(with)g(a)g(trailing)114
1665 y(slash\))e(in)o(to)f(the)h(File)h(P)o(ath)e(dialog)i(b)q(o)o(x)f
(in)g(the)g(Automatic)g(Scan)g(parameters)f(windo)o(w.)23
b(Select)16 b(y)o(our)114 1727 y(other)10 b(options)h(and)f(then)h(hit)
h(Start)d(Scanning)j(to)e(b)q(egin)i(taking)f(data.)17
b(The)11 b(program)f(will)i(sw)o(eep)f(across)114 1789
y(the)18 b(sun)g(and)g(or)f(mo)q(on)h(rep)q(eatedly)h(and)f(sa)o(v)o(e)
f(the)h(data)f(in)o(to)g(a)h(series)g(of)g(consecutiv)o(ely)h(n)o(um)o
(b)q(ered)114 1851 y(\014les.)g(DO)13 b(NOT)f(use)h(the)f(Auto)g
(Analyze)h(option.)20 b(If)12 b(y)o(ou)g(do,)g(it)h(will)h(generate)e
(a)g(bunc)o(h)h(of)f(useless)h(\014les)114 1913 y(based)k(on)h(the)g
(algebraic)g(p)q(oin)o(ting)h(correction)e(solution)i(describ)q(ed)g
(in)f(the)g(Moun)o(t)f(do)q(cumen)o(tation.)114 1975
y(Not)c(only)h(will)i(y)o(ou)e(ha)o(v)o(e)f(to)g(man)o(ually)i(remo)o
(v)o(e)e(those)h(\014les)g(b)q(efore)h(y)o(ou)e(can)h(p)q(erform)g(the)
g(\014tting,)g(but)114 2037 y(the)h(program)f(tends)h(to)f(b)q(e)i
(quite)g(buggy)f(and)g(ma)o(y)f(v)o(ery)h(w)o(ell)h(cause)f(IDL)h(to)e
(crash.)1628 2021 y Fj(4)1668 2037 y Fk(If)h(y)o(ou)g(w)o(an)o(t)f(to)
114 2099 y(mo)q(dify)k(scanner,)f(y)o(ou)h(ma)o(y)e(\014nd)i(the)g(do)q
(c)p 883 2099 V 17 w(library)g(header)f(from)g(scanner.pro)g(helpful.)
29 b(F)l(or)16 b(general)114 2162 y(use)f(instructions,)h(run)f(the)h
(program)e(and)h(select)h(HELP)g(from)e(the)h(men)o(u.)23
2261 y Fi(ANAL)l(YZE)h Fk(This)j(is)f(an)g(um)o(brella)h(program)d
(that)h(calls)i(sev)o(eral)f(other)g(programs.)26 b(The)18
b(result)g(is)h(that)114 2323 y(y)o(ou)14 b(can)i(call)g(it)f(with)h
(the)f(name)g(of)g(the)g(directory)h(full)g(of)f(the)g(.sa)o(v)f
(\014les)i(generated)g(b)o(y)f(scanner,)g(and)114 2385
y(it)j(will)h(pro)q(duce)g(a)e(list)h(of)g(\014tted)f(p)q(oin)o(ting)i
(corrections.)28 b(The)18 b(basic)g(syn)o(tax)f(is)h
Fa(ANALYZE,)23 b(dirname)114 2447 y Fk(where)13 b Fa(dirname)g
Fk(is)h(the)f(string)h(name)f(of)g(a)g(directory)h(or)f(a)g(string)g
(arra)o(y)g(of)g(directories.)20 b(If)14 b(called)h(with)p
0 2515 780 2 v 52 2568 a Fe(4)69 2584 y Fd(So.)20 b(..)g(wh)o(y)14
b(didn't)h(w)o(e)e(just)h(delete)h(that)f(part?)21 b(A)o(t)13
b(least)i(for)f(someone)h(as)f(bad)g(at)g(widget)h(programming)h(as)e
(me,)g(\014nding)0 2635 y(and)g(remo)o(ving)g(references)g(to)f(it)g
(from)g(all)h(the)f(v)n(arious)i(bits)e(w)o(ould)h(ha)o(v)o(e)g(tak)o
(en)g(more)f(time)g(than)h(it)f(is)h(w)o(orth.)964 2793
y Fk(4)p eop
%%Page: 5 5
5 4 bop 114 194 a Fk(no)15 b(parameters,)f(it)h(will)i(prompt)e(for)f
(a)h(directory)l(.)21 b(ANAL)l(YZE)15 b(calls)i(the)e(follo)o(wing)h
(programs:)136 293 y Fi(ERR)o(ORS)h Fk(This)f(in)o(teractiv)o(e)g
(command)f(line)i(program)d(reads)i(in)g(the)g(\014les)g(generated)g(b)
o(y)f(scanner.)214 355 y(It)k(\014ts)g(and)h(remo)o(v)o(es)e(a)i(p)q
(olynomial)h(baseline,)h(and)d(then)h(\014ts)f(a)g(Gaussian)h(to)e(the)
i(remaining)214 417 y(scan.)34 b(It)20 b(displa)o(ys)h(the)f(data,)g
(the)g(\014tted)f(line,)k(and)d(indicates)h(the)f(exp)q(ected)h(minima)
g(in)g(the)214 479 y(curren)o(t)c(plotting)h(windo)o(w.)27
b(After)17 b(all)h(the)g(\014ts)f(are)g(p)q(erformed,)h(it)g(lo)q(oks)f
(for)g(bad)h(data)f(p)q(oin)o(ts)214 541 y(in)f(whic)o(h)g(the)f(sum)g
(of)g(the)h(square)f(of)g(the)g(residuals)h(is)g(to)q(o)f(large)g(or)g
(\(optionally\))h(in)g(whic)o(h)g(the)214 603 y(data)c(do)q(es)g(not)h
(increase)g(monotonically)g(on)g(b)q(oth)g(sides)g(of)f(the)h(minim)o
(um.)20 b(It)12 b(then)h(displa)o(ys)h(the)214 666 y(data)e(and)i
(\014ts)f(again)h(for)e(the)i(user,)f(who)g(can)h(c)o(ho)q(ose)f(to)g
(accept)h(or)e(refuse)i(eac)o(h)g(individual)i(\014t)d(as)214
728 y(a)g(legitimate)i(calculation)g(using)f(the)g(k)o(eyb)q(oard.)19
b(\(T)o(yp)q(e)14 b(0-3)f(to)g(kill)i(the)f(data)f(from)g(a)g
(particular)214 790 y(sub)k(windo)o(w,)g(u)g(to)f(undo)i(the)f(kill)h
(and)g(accept)f(data)f(from)g(all)i(the)f(windo)o(ws)g(\(including)i
(those)214 852 y(crossed)g(out)g(b)o(y)g(the)h(automated)e(rejection)i
(feature\),)f(s)g(to)g(stop)g(in)o(teractiv)o(e)h(mo)q(de,)g(and)f(an)o
(y)214 914 y(other)12 b(k)o(ey)h(to)f(accept)i(the)f(\014ts.\))18
b(After)13 b(the)g(user)g(has)g(view)o(ed)h(all)g(of)e(the)h(\014ts,)g
(the)g(program)f(writes)214 976 y(a)f(\014le)h(con)o(taining)g(a)f
(list)h(of)f(co)q(ordinates)h(and)g(the)f(di\013erence)i(b)q(et)o(w)o
(een)e(the)h(exp)q(ected)g(minima)h(and)214 1038 y(the)h(minima)h(of)e
(the)i(\014tted)f(Gaussian)g(and)g(a)g(list)h(of)e(killed)k(p)q(oin)o
(ts)d(whic)o(h)h(will)h(not)e(b)q(e)g(used)h(later)214
1100 y(to)f(\014t)h(for)g(p)q(oin)o(ting)h(correction)g(constan)o(ts.)i
(The)e(follo)o(wing)g(programs)e(are)h(used)g(b)o(y)h(ERR)o(ORS:)236
1178 y Fi(base)p 338 1178 16 2 v 19 w(gauss)e Fk(This)g(program)f(p)q
(erforms)g(baseline)j(remo)o(v)m(al)e(and)g(Gaussian)g(\014ttings)g
(for)f(a)h(single)299 1240 y(scan.)236 1310 y Fi(g\014t2)i
Fk(This)f(program)f(p)q(erforms)h(the)g(actual)g(iterativ)o(e)g(lease)g
(squares)g(\014t)g(of)f(a)h(Gaussian)g(to)f(the)299 1372
y(data.)136 1450 y Fi(POINTFIT)e Fk(This)h(in)o(teractiv)o(e)f(program)
f(reads)h(in)h(the)f(\014le)h(sa)o(v)o(ed)f(b)o(y)g(ERR)o(ORS.)h(It)f
(can)g(b)q(e)h(in)o(v)o(ok)o(ed)214 1512 y(either)j(through)g(ANAL)l
(YZE)g(or)f(with)i(the)e(syn)o(tax)h Fa(POINTFIT,'/directory/er)o
(rors.sa)o(v')d Fk(It)214 1574 y(breaks)k(the)h(data)f(up)h(according)g
(to)g(category)e(\(eg)i(mo)q(on)f(v/s)g(sun,)i(forw)o(ard)d(v/s)i(rev)o
(erse\))f(and)214 1636 y(p)q(erforms)10 b(a)h(least)h(squares)e(\014t)i
(to)e(the)h(assumed)g(correction)h(functions.)19 b(After)11
b(eac)o(h)g(\014t,)h(it)f(displa)o(ys)214 1698 y(the)i(\014tted)h(line)
h(and)e(the)h(data)f(in)h(the)f(op)q(en)h(plotting)g(windo)o(w)g(and)g
(prompts)e(the)i(user)g(for)e(input.)214 1760 y(The)20
b(user)g(can)g(then)h(c)o(ho)q(ose)f(either)h(to)e(accept)h(the)g
(\014t\(an)o(y)g(k)o(ey)g(but)g(k)g(or)f(q\),)i(or)e(to)h(remo)o(v)o(e)
214 1822 y(individual)h(p)q(oin)o(ts)d(\(k\).)26 b(T)l(o)18
b(remo)o(v)o(e)f(p)q(oin)o(ts,)h(simply)h(left)f(clic)o(k)h(on)f(the)g
(plot)g(with)g(the)f(mouse.)214 1885 y(The)d(nearest)h(p)q(oin)o(t)g
(will)h(b)q(e)f(remo)o(v)o(ed)f(from)g(the)g(calculation,)i(the)f
(\014t)f(will)i(b)q(e)g(p)q(erformed)e(again,)214 1947
y(and)20 b(the)g(plot)g(will)h(b)q(e)g(up)q(dated.)34
b(When)20 b(satis\014ed)h(with)f(the)g(\014t,)g(righ)o(t)g(clic)o(k)h
(on)f(the)g(plot)g(to)214 2009 y(con)o(tin)o(ue.)32 b(After)19
b(all)h(the)f(\014ts)g(ha)o(v)o(e)g(b)q(een)h(p)q(erformed,)g(the)f
(program)f(will)j(prin)o(t)f(out)f(a)f(list)i(of)214
2071 y(calculated)15 b(corrections)f(and)g(will)i(sa)o(v)o(e)d(a)h
(similar)h(list)g(to)e(an)h(ASCI)q(I)i(\014le,)f(named)f(p)q(oin)o
(t\014t.log)g(b)o(y)214 2133 y(default.)20 b(\(A)14 b(sa)o(v)o(e)f
(\014le)j(is)f(also)f(generated.\))19 b(The)c(follo)o(wing)g(programs)e
(are)h(used)h(in)g(POINTFIT:)236 2211 y Fi(aa\014t)i
Fk(This)e(program)g(p)q(erforms)f(a)h(single)i(azim)o(uth)e(or)g
(altitude)h(\014t.)236 2281 y Fi(\014tgen)c Fk(This)g(function)f
(accepts)h(a)e(list)i(of)f(alt)g(and)g(az)g(p)q(oin)o(ts)h(and)f
(generates)g(the)g(linear)h(functions)299 2343 y(\(apart)g(from)h
(constan)o(ts\))f(used)i(in)h(the)e(least)h(squares)g(\014tting.)19
b(T)l(o)13 b(try)g(\014tting)h(to)f(some)g(other)299
2405 y(functions,)i(mo)q(dify)h(this.)236 2475 y Fi(k)o(eykill)h
Fk(This)h(simple)g(function)g(tak)o(es)e(all)i(of)f(the)g(data)f(and)h
(an)g(index)h(k)o(ey)f(and)h(returns)e(only)299 2537
y(the)f(data)f(corresp)q(onding)j(to)d(a)h(particular)h(category)e
(\(eg)h(forw)o(ard)f(mo)q(on)h(scans.\))236 2607 y Fi(\014ndp)q(oin)o
(t)k Fk(This)g(function)f(w)o(aits)g(for)f(a)g(mouse)h(clic)o(k)h(on)f
(the)g(plotting)g(windo)o(w)g(and)g(returns)299 2669
y(the)i(index)i(of)e(the)h(plotted)f(datum)h(whic)o(h)g(is)g(closest)g
(\(in)g(mac)o(hine)g(units\))g(to)f(the)g(user's)964
2793 y(5)p eop
%%Page: 6 6
6 5 bop 299 194 a Fk(selection.)23 294 y Fi(POINT2)16
b Fk(This)h(program)e(is)h(the)h(basic)g(in)o(terface)f(b)q(et)o(w)o
(een)g(IDL)h(and)f(the)h(radserv)e(soft)o(w)o(are)g(whic)o(h)i(runs)114
356 y(on)g(Quasar)h(and)g(comm)o(unicates)g(with)g(the)f(OMS)h(serv)o
(o)f(con)o(troller.)28 b(By)18 b(default)g(it)g(implemen)o(ts)h(all)114
418 y(p)q(oin)o(ting)i(corrections,)g(although)f(the)g(no)q(correct)g
(k)o(eyw)o(ord)f(can)i(b)q(e)f(used)h(to)f(either)g(p)q(oin)o(t)h
(without)114 480 y(corrections)16 b(or)g(to)g(use)h(only)h(dial)f
(o\013sets.)24 b(Note)16 b(that)g(it)h(reads)f(in)i(the)e(corrections)h
(from)f(the)h(ASCI)q(I)114 542 y(\014le)f(p)q(oin)o(t.con\014g2)f(ev)o
(ery)g(time)h(it)f(mak)o(es)g(a)g(p)q(oin)o(ting.)136
642 y Fi(mo)o(v)o(e)p 259 642 16 2 v 18 w(it)h Fk(P)o(ac)o(k)m(ages)e
(commands)h(in)o(to)g(a)g(string)g(that)g(can)g(b)q(e)h(sen)o(t)f(to)f
(the)i(p)q(c.)136 720 y Fi(correct)23 b Fk(Uses)g(the)g(sky)f(co)q
(ordinates)i(and)f(the)f(correction)h(constan)o(ts)f(to)g(decide)j
(what)d(enco)q(der)214 783 y(co)q(ordinates)15 b(to)g(use.)136
861 y Fi(p)q(oin)o(t.con\014g2)j Fk(This)g(text)e(\014le)i(con)o(tains)
f(a)f(list)i(of)e(correction)h(constan)o(ts.)24 b(See)18
b(the)f(\014le)h(for)e(prop)q(er)214 923 y(ordering.)23
1023 y Fi(SUREHOME)e Fk(This)g(programs)e(attempts)h(to)f(send)i(the)g
(dishes)g(home.)19 b(If)14 b(an)f(error)g(message)g(is)h(returned,)114
1085 y(it)20 b(rep)q(eatedly)g(sends)h(them)e(to)g(di\013eren)o(t)h
(random)g(lo)q(cations)g(and)g(then)g(tries)g(to)f(send)h(them)g(home)
114 1147 y(again.)h(It)16 b(will)h(k)o(eep)f(going)g(un)o(til)h(the)f
(problem)g(is)g(resolv)o(ed)g(or)f(a)h(maxim)o(um)f(n)o(um)o(b)q(er)h
(of)g(attempts)e(is)114 1209 y(exceeded.)23 1309 y Fi(STONEHENGE)h
Fk(This)f(program)f(mak)o(es)g(a)g(surface)h(plot)g(of)f(the)g
(magnitude)i(of)e(the)h(total)f(o\013set)f(against)114
1371 y(the)j(alt)g(and)g(az)h(of)e(that)h(p)q(oin)o(t.)20
b(Useful)c(for)f(lo)q(oking)h(at)f(step)g(discon)o(tin)o(uities.)23
1470 y Fi(F)o(OLLO)o(WSUNx,)25 b(where)f(x)f(is)h(an)h(in)o(teger)c
Fk(A)g(series)h(of)e(programs)g(whic)o(h)i(trac)o(k)e(the)h(sun,)h(p)q
(oin)o(t)114 1532 y(on)17 b(and)h(o\013)f(the)h(sun)g(rep)q(eatedly)l
(,)i(p)q(oin)o(t)e(one)g(dish)h(on)f(the)g(sun)g(and)g(the)g(other)f
(o\013)g(the)h(sun,)g(and)g(so)114 1594 y(on.)29 b(They're)18
b(not)g(fully)i(tested)e(or)g(do)q(cumen)o(ted,)i(but)e(ha)o(v)o(e)g(b)
q(een)i(included)h(in)e(order)f(to)g(sa)o(v)o(e)g(time)114
1656 y(debugging)e(these)f(metho)q(ds)h(in)g(the)f(future.)683
1822 y Fi(6.3.)52 b(Common)17 b(k)o(eyw)o(ords.)91 1910
y Fk(There)f(are)f(also)h(a)g(few)f(commonly)h(used)g(k)o(eyw)o(ords)f
(of)h(whic)o(h)g(y)o(ou)g(should)h(b)q(e)f(a)o(w)o(are.)k(\(There)c
(are)f(not)0 1972 y(common)g(to)f(all)j(programs,)c(but)i(are)g(used)h
(b)o(y)f(sev)o(eral.\))23 2090 y Fi(/i:)20 b Fk(In)o(teractiv)o(e)c(mo)
q(de.)k(Usually)c(the)f(default.)23 2190 y Fi(/v)o(erb)q(ose:)j
Fk(Prin)o(t)e(more)e(info)i(than)f(usual.)23 2289 y Fi(/silen)o(t)h
Fk(or)e(sometimes)h(s:)20 b(silen)o(t)c(mo)q(de.)23 2388
y Fi(sco)q(op=#:)i Fk(The)12 b(n)o(um)o(b)q(er)g(of)g(p)q(oin)o(ts)g
(on)g(either)h(side)g(of)f(the)g(global)h(minim)o(um)g(to)e(use)i(for)e
(Gaussian)h(\014tting.)114 2451 y(\(See)j(section)h(8)f(for)f(more)h
(info\))23 2550 y Fi(/plotit:)21 b Fk(plots)16 b(things.)23
2650 y Fi(/usecorr:)j Fk(Finds)d(corrections)f(with)g(resp)q(ect)h(to)f
(the)g(already)g(corrected)h(co)q(ordinates.)964 2793
y(6)p eop
%%Page: 7 7
7 6 bop 23 194 a Fi(/mixcor:)19 b Fk(Finds)14 b(corrections)g(with)g
(resp)q(ect)h(to)e(the)h(uncorrected)h(co)q(ordinates,)f(but)g(plots)g
(things)g(against)114 257 y(the)h(corrected)g(co)q(ordinates.)20
b(\(Ma)o(y)14 b(con\015ict)i(with)g(other)f(options,)g(suc)o(h)g(as)g
(sco)q(op.\))638 422 y Fi(7.)52 b(The)18 b(Recip)q(e,)g(as)g(promised.)
91 510 y Fk(Ok)m(a)o(y)l(,)24 b(no)o(w)e(that)f(y)o(ou)h(kno)o(w)g(ev)o
(erything)h(there)f(is)h(to)e(kno)o(w)h(ab)q(out)g(correcting)h(the)f
(12)g(GHz)g(dish)0 572 y(p)q(oin)o(ting,)16 b(here's)f(a)g(handy)h
(step)f(b)o(y)g(step)g(list)h(in)g(the)f(prop)q(er)h(order.)56
689 y(1.)22 b(Set)15 b(up)h(the)f(hardw)o(are)f(according)i(to)f
(section)g(5.)56 788 y(2.)22 b(Mak)o(e)14 b(a)h(directory)g(in)o(to)h
(whic)o(h)g(\014les)g(will)h(b)q(e)f(sa)o(v)o(ed)56 886
y(3.)22 b(T)l(o)15 b(mak)o(e)f(sure)i(no)f(wires)g(ha)o(v)o(e)g(b)q
(een)h(crossed,)f(do)g(the)h(follo)o(wing:)168 985 y
Fb(\017)23 b Fk(Disconnect)16 b(one)f(of)g(the)g(incoming)h(lines)h(at)
e(the)g(top)g(of)g(the)g(Xband)h(rac)o(k.)168 1064 y
Fb(\017)23 b Fk(Run)14 b(SCANNER,)g(c)o(ho)q(ose)g(an)g(appropriate)f
(directory)l(,)h(and)g(press)g(the)g(\\stop)f(scanning")h(button)214
1126 y(during)i(the)f(\014rst)g(scan.)168 1204 y Fb(\017)23
b Fk(Use)d(ANAL)l(YZE)i(or)e(ERR)o(ORS)i(to)e(view)h(the)g(results)g
(of)f(the)h(\014rst)f(scan.)37 b(Y)l(ou)21 b(should)g(see)g(a)214
1266 y(Gaussian)15 b(for)f(b)q(oth)i(the)f(alt)g(and)h(az)f(of)f(one)i
(dish,)g(and)f(garbage)f(for)h(the)g(other.)168 1344
y Fb(\017)23 b Fk(If)15 b(the)h(soft)o(w)o(are)d(correctly)j(pic)o(ks)g
(out)f(the)h(disconnected)h(dish,)f(then)g(ev)o(erything)g(is)g(set)f
(up)h(\014ne.)214 1406 y(Otherwise,)f(try)g(switc)o(hing)h(the)f(A)g
(and)h(B)f(inputs)h(to)f(the)g(crystal)g(switc)o(h.)56
1505 y(4.)22 b(Run)16 b(SCANNER)g(and)f(start)f(taking)h(data)g(in)h
(automatic)e(scan)i(mo)q(de.)56 1604 y(5.)22 b(Run)h(ANAL)l(YZE)g(to)f
(\014nd)h(the)g(p)q(oin)o(ting)h(corrections.)42 b(\(Rep)q(eat)23
b(with)g(di\013eren)o(t)f(settings)h(or)f(call)114 1666
y(POINTFIT)15 b(directly)i(with)e(di\013eren)o(t)h(setting)f(if)h
(necessary)l(.\))56 1765 y(6.)22 b(If)15 b(y)o(ou)g(are)h(con\014den)o
(t)f(that)g(the)h(\014ts)f(are)g(correct,)g(transfer)f(the)i(returned)g
(p)q(oin)o(ting)g(constan)o(ts)f(\(sa)o(v)o(ed)114 1827
y(in)i(p)q(oin)o(t\014t.log\))f(to)f(the)i(\014le)g(p)q(oin)o
(t.congif2.)23 b(Commen)o(t)16 b(out)f(the)i(old)f(n)o(um)o(b)q(ers)h
(and)f(adding)h(the)g(new)114 1889 y(ones)e(in)h(the)f(correct)g
(order.)56 1988 y(7.)22 b(T)l(ak)o(e)14 b(another)h(da)o(y)g(of)g(data)
f(with)i(the)f(corrections)h(implemen)o(ted)h(and)e(see)g(if)h(it)f(w)o
(ork)o(ed.)736 2154 y Fi(8.)52 b(T)l(roublesho)q(oting.)91
2242 y Fk(In)19 b(principle,)j(\014nding)e(the)f(appropriate)g
(corrections)g(should)g(b)q(e)h(easy)l(.)30 b(Chances)19
b(are,)g(ho)o(w)o(ev)o(er,)f(y)o(ou)0 2304 y(will)f(run)e(in)o(to)g
(sev)o(eral)h(problems)g(and)f(setbac)o(ks.)20 b(Here)15
b(are)g(a)g(few)g(with)g(whic)o(h)h(w)o(e'v)o(e)f(already)g(dealt:)23
2420 y Fi(Non-Gaussian)21 b(scans)c Fk(Since)h(w)o(e)f(are)g(using)h
(o\013-axis)f(rectangular)g(horns)g(and)g(b)q(ecause)h(our)f(amps)g
(and)114 2482 y(detectors)10 b(are)g(somewhat)f(nonlinear)j(o)o(v)o(er)
e(a)g(wide)h(p)q(o)o(w)o(er)f(range,)h(the)f(drift)h(scans)f(ma)o(y)g
(not)g(b)q(e)h(p)q(erfectly)114 2545 y(Gaussian.)18 b(They)12
b(ma)o(y)f(b)q(e)h(sligh)o(tly)h(sk)o(ew)o(ed)e(to)g(one)g(side)i(or)e
(the)g(other,)h(or)f(the)g(sides)i(ma)o(y)d(not)h(main)o(tain)114
2607 y(the)k(exp)q(ected)h(Gaussian)g(shap)q(e.)k(I)c(found)f(that)g
(at)f(relativ)o(ely)j(lo)o(w)e(ampli\014cation)i(\(with)e(the)g
(detector)114 2669 y(v)o(oltage)h(less)h(than)g(-.1)f(v)o(olts)g(when)h
(lo)q(oking)h(at)e(op)q(en)h(sky\))g(the)f(sides)i(of)e(the)h(b)q(eam)g
(pattern)f(b)q(ecome)964 2793 y(7)p eop
%%Page: 8 8
8 7 bop 114 194 a Fk(dramatically)18 b(steep)q(er)g(than)g(a)g
(Gaussian)f(at)h(ab)q(out)f(3)h(degrees)g(from)f(the)h(cen)o(ter.)27
b(In)19 b(order)e(to)g(deal)114 257 y(with)i(these)g(e\013ects,)g(the)g
(sco)q(op)g(v)m(ariable)h(can)g(b)q(e)f(used.)32 b(Both)19
b(ANAL)l(YZE)g(and)g(ERR)o(ORS)i(accept)114 319 y Fa(scoop=#)14
b Fk(as)h(an)g(optional)h(parameter.)j(Sco)q(op's)c(argumen)o(t)f(is)i
(the)f(n)o(um)o(b)q(er)h(of)e(p)q(oin)o(ts)i(in)g(the)f(vicinit)o(y)114
381 y(of)d(the)h(global)h(minim)o(um)g(whic)o(h)g(will)h(b)q(e)f
(\014tted)f(with)g(a)g(Gaussian.)19 b(Cho)q(osing)14
b(a)e(sco)q(op)i(b)q(et)o(w)o(een)f(5)g(and)114 443 y(7)i(seemed)g(to)g
(w)o(ork)f(w)o(ell)i(for)f(.5)f(degree)i(spaced)g(altitude)g(scans.)23
542 y Fi(enco)q(der)h(drift)f Fk(The)f(enco)q(ders)h(claim)g(that)f
(they)g(are)g(accurate)f(to)h(within)h(3)f(times)g(their)h(resolution)g
(o)o(v)o(er)114 604 y(time,)e(whic)o(h)i(corresp)q(onds)e(to)g
(something)h(lik)o(e)g(.25)f(degrees.)20 b(In)15 b(realit)o(y)l(,)g(a)f
(few)g(of)g(the)h(axes)f(drift)h(b)o(y)f(a)114 667 y(considerable)k
(amoun)o(t)f(when)g(rep)q(oin)o(ting.)27 b(The)17 b(solution,)h(at)e
(least)i(if)f(y)o(ou)g(don't)f(feel)i(lik)o(e)h(replacing)114
729 y(or)14 b(attempting)h(to)g(repair)g(the)h(enco)q(ders)g(themselv)o
(es,)f(is)h(to)e(home)h(the)h(dishes)g(often)f(when)h(p)q(oin)o(ting.)
23 828 y Fi(Extremely)k(bad)h(p)q(oin)o(ting.)31 b Fk(If)18
b(y)o(ou)g(start)f(o\013)g(with)i(v)o(ery)f(p)q(o)q(or)g(corrections,)h
(more)e(than)h(four)g(or)g(\014v)o(e)114 890 y(degrees,)13
b(y)o(ou)h(ma)o(y)f(disco)o(v)o(er)g(that)g(one)h(or)f(b)q(oth)h(sw)o
(eeps)f(miss)h(the)g(sun)g(en)o(tirely)l(.)21 b(The)13
b(easiest)h(solution)114 952 y(is)i(to)g(start)f(with)h(no)g
(corrections,)g(and)g(if)h(that)e(do)q(esn't)h(w)o(ork)f(step)h(the)h
(alt)f(and)g(az)g(dial)h(o\013sets)e(b)o(y)h(a)114 1014
y(couple)g(of)f(degrees)g(in)h(p)q(oin)o(t.con\014g2)g(rep)q(eatedly)g
(un)o(til)g(y)o(ou)f(\014nd)h(the)f(sun.)23 1114 y Fi(D)o(VM)e(resp)q
(onse)h(time)g Fk(The)f(panel)h(D)o(VM)e(tak)o(es)g(a)h(few)f(seconds)i
(to)e(readjust)h(its)g(range)f(to)h(accommo)q(date)114
1176 y(new)21 b(v)o(oltages.)36 b(The)21 b(amoun)o(t)g(of)f(time)h
(required)h(v)m(aries,)h(and)e(increases)h(with)f(increasing)i(v)o
(oltage)114 1238 y(separation.)d(The)15 b(soft)o(w)o(are)f(allo)o(ws)h
(some)g(around)g(2)g(seconds)h(b)q(et)o(w)o(een)g(samples,)f(whic)o(h)h
(seems)g(to)e(b)q(e)114 1300 y(enough)i(time)g(for)f(most)g(reasonable)
i(v)o(oltages.)k(If)16 b(y)o(ou)f(get)h(v)o(ery)f(strange)h(results,)g
(it)g(is)g(p)q(ossible)i(that)114 1362 y(y)o(ou)c(ma)o(y)h(need)h(to)e
(lengthen)i(this)g(dela)o(y)l(.)k(DO)15 b(NOT)g(shorten)g(it,)g(ho)o(w)
o(ev)o(er.)k(If)c(the)g(dela)o(y)h(drops)f(m)o(uc)o(h)114
1424 y(b)q(elo)o(w)k(t)o(w)o(o)f(seconds,)i(the)g(meter)f(will)h(b)q(e)
g(unable)h(to)d(resp)q(ond)i(if)f(one)h(of)f(the)g(dishes)h(exp)q
(eriences)h(a)114 1486 y(dramatic)c(drop)h(in)h(p)q(o)o(w)o(er.)27
b(\(T)l(rust)18 b(me.)28 b(I)18 b(hours)g(debugging)g(a)g(false)g(in)o
(termittency)h(whic)o(h)g(turned)114 1549 y(out)14 b(to)h(b)q(e)h(the)f
(result)h(of)f(sampling)h(to)q(o)e(fast)h(for)f(the)i(meter.\))796
1714 y Fi(9.)52 b(Conclusion.)91 1802 y Fk(Congratulations.)19
b(Y)l(ou)c(no)o(w)f(kno)o(w)g(as)g(m)o(uc)o(h)h(ab)q(out)f(12)g(GHz)h
(dish)g(p)q(oin)o(ting)h(as)e(an)o(y)o(one.)19 b(If)c(y)o(ou)f(mak)o(e)
0 1864 y(an)o(y)h(dramatic)g(c)o(hanges)h(to)e(the)i(soft)o(w)o(are,)d
(or)i(y)o(ou)g(disco)o(v)o(er)g(b)q(etter)h(metho)q(ds,)f(don't)g
(forget)f(to)h(up)q(date)h(this)0 1926 y(do)q(cumen)o(t.)964
2793 y(8)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
